"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDTFAttributeVisualization = exports.GEOMETRYTYPEHINT = exports.PRIMITIVETYPEHINT = exports.SDTFAttributesData = exports.SDTFItemData = exports.SDTFAttributeOverview = exports.SDTFAttributeData = exports.AbstractLight = exports.LightScene = exports.SpotLight = exports.PointLight = exports.HemisphereLight = exports.DirectionalLight = exports.AmbientLight = exports.OrthographicCameraControls = exports.OrthographicCamera = exports.PerspectiveCameraControls = exports.PerspectiveCamera = exports.AbstractCamera = exports.SessionOutputData = exports.SessionData = exports.MaterialData = exports.AnimationData = exports.GeometryData = exports.CustomData = exports.ThreejsData = exports.AbstractTreeNodeData = exports.TreeNode = exports.Tree = exports.FileParameter = exports.Output = exports.Export = exports.Parameter = exports.AttributeViewer = exports.StandardViewer = exports.Session = exports.Api = exports.ENVIRONMENTMAP_CUBE = exports.ENVIRONMENTMAP = exports.PARAMETERVISUALIZATION = exports.PARAMETERTYPE = exports.EXPORTTYPE = exports.EVENTTYPE = exports.LOGGINGLEVEL = exports.VISIBILITYMODE = exports.LIGHTTYPE = exports.ORTHOGRAPHIC_CAMERA_DIRECTION = exports.CAMERATYPE = exports.RENDERERTYPE = exports.api = void 0;
exports.ATTRIBUTEVISUALIZATION = void 0;
const viewer_rendering_engine_camera_engine_1 = require("@shapediver/viewer.rendering-engine.camera-engine");
Object.defineProperty(exports, "CAMERATYPE", { enumerable: true, get: function () { return viewer_rendering_engine_camera_engine_1.CAMERATYPE; } });
Object.defineProperty(exports, "ORTHOGRAPHIC_CAMERA_DIRECTION", { enumerable: true, get: function () { return viewer_rendering_engine_camera_engine_1.ORTHOGRAPHIC_CAMERA_DIRECTION; } });
const tsyringe_1 = require("tsyringe");
const viewer_rendering_engine_light_engine_1 = require("@shapediver/viewer.rendering-engine.light-engine");
Object.defineProperty(exports, "LIGHTTYPE", { enumerable: true, get: function () { return viewer_rendering_engine_light_engine_1.LIGHTTYPE; } });
const viewer_rendering_engine_rendering_engine_1 = require("@shapediver/viewer.rendering-engine.rendering-engine");
Object.defineProperty(exports, "RENDERERTYPE", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.RENDERERTYPE; } });
Object.defineProperty(exports, "VISIBILITYMODE", { enumerable: true, get: function () { return viewer_rendering_engine_rendering_engine_1.VISIBILITYMODE; } });
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
Object.defineProperty(exports, "AbstractTreeNodeData", { enumerable: true, get: function () { return viewer_shared_node_tree_1.AbstractTreeNodeData; } });
Object.defineProperty(exports, "Tree", { enumerable: true, get: function () { return viewer_shared_node_tree_1.Tree; } });
Object.defineProperty(exports, "TreeNode", { enumerable: true, get: function () { return viewer_shared_node_tree_1.TreeNode; } });
const viewer_rendering_engine_threejs_standard_1 = require("@shapediver/viewer.rendering-engine-threejs.standard");
Object.defineProperty(exports, "ENVIRONMENTMAP", { enumerable: true, get: function () { return viewer_rendering_engine_threejs_standard_1.ENVIRONMENTMAP; } });
Object.defineProperty(exports, "ENVIRONMENTMAP_CUBE", { enumerable: true, get: function () { return viewer_rendering_engine_threejs_standard_1.ENVIRONMENTMAP_CUBE; } });
Object.defineProperty(exports, "ThreejsData", { enumerable: true, get: function () { return viewer_rendering_engine_threejs_standard_1.ThreejsData; } });
const viewer_shared_types_1 = require("@shapediver/viewer.shared.types");
Object.defineProperty(exports, "CustomData", { enumerable: true, get: function () { return viewer_shared_types_1.CustomData; } });
Object.defineProperty(exports, "GeometryData", { enumerable: true, get: function () { return viewer_shared_types_1.GeometryData; } });
Object.defineProperty(exports, "MaterialData", { enumerable: true, get: function () { return viewer_shared_types_1.MaterialData; } });
Object.defineProperty(exports, "SDTFAttributeData", { enumerable: true, get: function () { return viewer_shared_types_1.SDTFAttributeData; } });
Object.defineProperty(exports, "SDTFAttributeOverview", { enumerable: true, get: function () { return viewer_shared_types_1.SDTFAttributeOverview; } });
Object.defineProperty(exports, "SDTFItemData", { enumerable: true, get: function () { return viewer_shared_types_1.SDTFItemData; } });
Object.defineProperty(exports, "SDTFAttributesData", { enumerable: true, get: function () { return viewer_shared_types_1.SDTFAttributesData; } });
Object.defineProperty(exports, "PRIMITIVETYPEHINT", { enumerable: true, get: function () { return viewer_shared_types_1.PRIMITIVETYPEHINT; } });
Object.defineProperty(exports, "GEOMETRYTYPEHINT", { enumerable: true, get: function () { return viewer_shared_types_1.GEOMETRYTYPEHINT; } });
Object.defineProperty(exports, "SDTFAttributeVisualization", { enumerable: true, get: function () { return viewer_shared_types_1.SDTFAttributeVisualization; } });
Object.defineProperty(exports, "ATTRIBUTEVISUALIZATION", { enumerable: true, get: function () { return viewer_shared_types_1.ATTRIBUTEVISUALIZATION; } });
Object.defineProperty(exports, "AnimationData", { enumerable: true, get: function () { return viewer_shared_types_1.AnimationData; } });
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
Object.defineProperty(exports, "EVENTTYPE", { enumerable: true, get: function () { return viewer_shared_services_1.EVENTTYPE; } });
Object.defineProperty(exports, "LOGGINGLEVEL", { enumerable: true, get: function () { return viewer_shared_services_1.LOGGINGLEVEL; } });
const viewer_session_engine_session_engine_1 = require("@shapediver/viewer.session-engine.session-engine");
Object.defineProperty(exports, "SessionData", { enumerable: true, get: function () { return viewer_session_engine_session_engine_1.SessionData; } });
Object.defineProperty(exports, "SessionOutputData", { enumerable: true, get: function () { return viewer_session_engine_session_engine_1.SessionOutputData; } });
const api_geometry_api_dto_v1_1 = require("@shapediver/api.geometry-api-dto-v1");
Object.defineProperty(exports, "EXPORTTYPE", { enumerable: true, get: function () { return api_geometry_api_dto_v1_1.ShapeDiverResponseExportDefinitionType; } });
const Api_1 = require("./implementation/Api");
Object.defineProperty(exports, "Api", { enumerable: true, get: function () { return Api_1.Api; } });
const StandardViewer_1 = require("./implementation/viewer/StandardViewer");
Object.defineProperty(exports, "StandardViewer", { enumerable: true, get: function () { return StandardViewer_1.StandardViewer; } });
const Output_1 = require("./implementation/session/Output");
Object.defineProperty(exports, "Output", { enumerable: true, get: function () { return Output_1.Output; } });
const Export_1 = require("./implementation/session/Export");
Object.defineProperty(exports, "Export", { enumerable: true, get: function () { return Export_1.Export; } });
const Session_1 = require("./implementation/session/Session");
Object.defineProperty(exports, "Session", { enumerable: true, get: function () { return Session_1.Session; } });
const PerspectiveCameraControls_1 = require("./implementation/viewer/camera/controls/PerspectiveCameraControls");
Object.defineProperty(exports, "PerspectiveCameraControls", { enumerable: true, get: function () { return PerspectiveCameraControls_1.PerspectiveCameraControls; } });
const OrthographicCamera_1 = require("./implementation/viewer/camera/OrthographicCamera");
Object.defineProperty(exports, "OrthographicCamera", { enumerable: true, get: function () { return OrthographicCamera_1.OrthographicCamera; } });
const PerspectiveCamera_1 = require("./implementation/viewer/camera/PerspectiveCamera");
Object.defineProperty(exports, "PerspectiveCamera", { enumerable: true, get: function () { return PerspectiveCamera_1.PerspectiveCamera; } });
const OrthographicCameraControls_1 = require("./implementation/viewer/camera/controls/OrthographicCameraControls");
Object.defineProperty(exports, "OrthographicCameraControls", { enumerable: true, get: function () { return OrthographicCameraControls_1.OrthographicCameraControls; } });
const AmbientLight_1 = require("./implementation/viewer/lights/AmbientLight");
Object.defineProperty(exports, "AmbientLight", { enumerable: true, get: function () { return AmbientLight_1.AmbientLight; } });
const DirectionalLight_1 = require("./implementation/viewer/lights/DirectionalLight");
Object.defineProperty(exports, "DirectionalLight", { enumerable: true, get: function () { return DirectionalLight_1.DirectionalLight; } });
const HemisphereLight_1 = require("./implementation/viewer/lights/HemisphereLight");
Object.defineProperty(exports, "HemisphereLight", { enumerable: true, get: function () { return HemisphereLight_1.HemisphereLight; } });
const PointLight_1 = require("./implementation/viewer/lights/PointLight");
Object.defineProperty(exports, "PointLight", { enumerable: true, get: function () { return PointLight_1.PointLight; } });
const SpotLight_1 = require("./implementation/viewer/lights/SpotLight");
Object.defineProperty(exports, "SpotLight", { enumerable: true, get: function () { return SpotLight_1.SpotLight; } });
const LightScene_1 = require("./implementation/viewer/lights/LightScene");
Object.defineProperty(exports, "LightScene", { enumerable: true, get: function () { return LightScene_1.LightScene; } });
const Parameter_1 = require("./implementation/session/Parameter");
Object.defineProperty(exports, "Parameter", { enumerable: true, get: function () { return Parameter_1.Parameter; } });
Object.defineProperty(exports, "PARAMETERTYPE", { enumerable: true, get: function () { return Parameter_1.PARAMETERTYPE; } });
Object.defineProperty(exports, "PARAMETERVISUALIZATION", { enumerable: true, get: function () { return Parameter_1.PARAMETERVISUALIZATION; } });
const FileParameter_1 = require("./implementation/session/FileParameter");
Object.defineProperty(exports, "FileParameter", { enumerable: true, get: function () { return FileParameter_1.FileParameter; } });
const AbstractLight_1 = require("./implementation/viewer/lights/AbstractLight");
Object.defineProperty(exports, "AbstractLight", { enumerable: true, get: function () { return AbstractLight_1.AbstractLight; } });
const AbstractCamera_1 = require("./implementation/viewer/camera/AbstractCamera");
Object.defineProperty(exports, "AbstractCamera", { enumerable: true, get: function () { return AbstractCamera_1.AbstractCamera; } });
const AttributeViewer_1 = require("./implementation/viewer/AttributeViewer");
Object.defineProperty(exports, "AttributeViewer", { enumerable: true, get: function () { return AttributeViewer_1.AttributeViewer; } });
exports.api = tsyringe_1.container.resolve(Api_1.Api);
//# sourceMappingURL=index.js.map