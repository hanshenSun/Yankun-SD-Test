import { OrthographicCameraControls as OrthographicCameraControlsLogic } from '@shapediver/viewer.rendering-engine.camera-engine';
import { IOrthographicCameraControls } from '../../../../interfaces/viewer/camera/controls/IOrthographicCameraControls';
import { IViewer } from '../../../../interfaces/viewer/IViewer';
export declare class OrthographicCameraControls implements IOrthographicCameraControls {
    #private;
    constructor(controls: OrthographicCameraControlsLogic, viewer: IViewer);
    get damping(): number;
    set damping(value: number);
    get enableKeyPan(): boolean;
    set enableKeyPan(value: boolean);
    get enablePan(): boolean;
    set enablePan(value: boolean);
    get enableZoom(): boolean;
    set enableZoom(value: boolean);
    get enabled(): boolean;
    set enabled(value: boolean);
    get input(): {
        keys: {
            up: number;
            down: number;
            left: number;
            right: number;
        };
        mouse: {
            rotate: number;
            zoom: number;
            pan: number;
        };
        touch: {
            rotate: number;
            zoom: number;
            pan: number;
        };
    };
    set input(value: {
        keys: {
            up: number;
            down: number;
            left: number;
            right: number;
        };
        mouse: {
            rotate: number;
            zoom: number;
            pan: number;
        };
        touch: {
            rotate: number;
            zoom: number;
            pan: number;
        };
    });
    get keyPanSpeed(): number;
    set keyPanSpeed(value: number);
    get movementSmoothness(): number;
    set movementSmoothness(value: number);
    get panSpeed(): number;
    set panSpeed(value: number);
    get zoomSpeed(): number;
    set zoomSpeed(value: number);
}
//# sourceMappingURL=OrthographicCameraControls.d.ts.map