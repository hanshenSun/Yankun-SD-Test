import { CAMERATYPE } from '@shapediver/viewer.rendering-engine.camera-engine';
import { vec3 } from 'gl-matrix';
import { Box } from '@shapediver/viewer.shared.math';
import { ICamera } from '../../../interfaces/viewer/camera/ICamera';
import { IViewer } from '../../../interfaces/viewer/IViewer';
export declare abstract class AbstractCamera implements ICamera {
    #private;
    constructor(camera: ICamera, viewer: IViewer);
    set autoAdjust(value: boolean);
    get autoAdjust(): boolean;
    get cameraMovementDuration(): number;
    set cameraMovementDuration(value: number);
    get defaultPosition(): vec3;
    set defaultPosition(value: vec3);
    get defaultTarget(): vec3;
    set defaultTarget(value: vec3);
    get enableCameraControls(): boolean;
    set enableCameraControls(value: boolean);
    get id(): string;
    get order(): number | undefined;
    set order(value: number | undefined);
    get position(): vec3;
    set position(value: vec3);
    get revertAtMouseUp(): boolean;
    set revertAtMouseUp(value: boolean);
    get revertAtMouseUpDuration(): number;
    set revertAtMouseUpDuration(value: number);
    get target(): vec3;
    set target(value: vec3);
    get type(): CAMERATYPE;
    get zoomExtentsFactor(): number;
    set zoomExtentsFactor(value: number);
    animate(path: {
        position: vec3;
        target: vec3;
    }[], options?: {
        easing?: string;
        duration?: number;
        default?: boolean;
        coordinates?: string;
        interpolation?: string;
    }): Promise<boolean>;
    reset(options?: {
        easing?: string;
        duration?: number;
        coordinates?: string;
        interpolation?: string;
    }): Promise<boolean>;
    set(position: vec3, target: vec3, options?: {
        easing?: string;
        duration?: number;
        coordinates?: string;
        interpolation?: string;
    }): Promise<boolean>;
    zoomTo(zoomTarget?: string[] | Box, options?: {
        easing?: string;
        duration?: number;
        coordinates?: string;
        interpolation?: string;
    }): Promise<boolean>;
}
//# sourceMappingURL=AbstractCamera.d.ts.map