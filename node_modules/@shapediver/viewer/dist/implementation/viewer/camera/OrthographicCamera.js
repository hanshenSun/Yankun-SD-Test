"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _OrthographicCamera_camera, _OrthographicCamera_controls, _OrthographicCamera_inputValidator, _OrthographicCamera_logger, _OrthographicCamera_viewer;
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrthographicCamera = void 0;
const viewer_rendering_engine_camera_engine_1 = require("@shapediver/viewer.rendering-engine.camera-engine");
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
const tsyringe_1 = require("tsyringe");
const AbstractCamera_1 = require("./AbstractCamera");
const OrthographicCameraControls_1 = require("./controls/OrthographicCameraControls");
class OrthographicCamera extends AbstractCamera_1.AbstractCamera {
    constructor(camera, viewer) {
        super(camera, viewer);
        _OrthographicCamera_camera.set(this, void 0);
        _OrthographicCamera_controls.set(this, void 0);
        _OrthographicCamera_inputValidator.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.InputValidator));
        _OrthographicCamera_logger.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.Logger));
        _OrthographicCamera_viewer.set(this, void 0);
        try {
            __classPrivateFieldSet(this, _OrthographicCamera_camera, camera, "f");
            __classPrivateFieldSet(this, _OrthographicCamera_viewer, viewer, "f");
            __classPrivateFieldSet(this, _OrthographicCamera_controls, new OrthographicCameraControls_1.OrthographicCameraControls(camera.controls, viewer), "f");
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _OrthographicCamera_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, e, `Camera(${this.id}).constructor: Something unexpected happened.`, true);
        }
    }
    get controls() {
        return __classPrivateFieldGet(this, _OrthographicCamera_controls, "f");
    }
    get direction() {
        return __classPrivateFieldGet(this, _OrthographicCamera_camera, "f").direction;
    }
    set direction(value) {
        try {
            __classPrivateFieldGet(this, _OrthographicCamera_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Camera(${this.id}).direction: Updating Direction to ${value}.`);
            __classPrivateFieldGet(this, _OrthographicCamera_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Camera(${this.id}).direction`, value, 'enum', true, Object.values(viewer_rendering_engine_camera_engine_1.ORTHOGRAPHIC_CAMERA_DIRECTION));
            __classPrivateFieldGet(this, _OrthographicCamera_camera, "f").direction = value;
            __classPrivateFieldGet(this, _OrthographicCamera_camera, "f").zoomTo(undefined, { duration: 0 });
            __classPrivateFieldGet(this, _OrthographicCamera_viewer, "f").update();
            __classPrivateFieldGet(this, _OrthographicCamera_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Camera(${this.id}).direction: direction was set to: ${value}`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _OrthographicCamera_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, e, `Camera(${this.id}).direction: Something unexpected happened.`, true);
        }
    }
}
exports.OrthographicCamera = OrthographicCamera;
_OrthographicCamera_camera = new WeakMap(), _OrthographicCamera_controls = new WeakMap(), _OrthographicCamera_inputValidator = new WeakMap(), _OrthographicCamera_logger = new WeakMap(), _OrthographicCamera_viewer = new WeakMap();
//# sourceMappingURL=OrthographicCamera.js.map