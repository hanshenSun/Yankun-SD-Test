"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _StandardViewer_cameras, _StandardViewer_converter, _StandardViewer_eventEngine, _StandardViewer_inputValidator, _StandardViewer_lightScenes, _StandardViewer_logger, _StandardViewer_performanceEvaluator, _StandardViewer_stateEngine, _StandardViewer_busyModeIDs, _StandardViewer_renderingEngine;
Object.defineProperty(exports, "__esModule", { value: true });
exports.StandardViewer = void 0;
const viewer_rendering_engine_threejs_standard_1 = require("@shapediver/viewer.rendering-engine-threejs.standard");
const viewer_rendering_engine_camera_engine_1 = require("@shapediver/viewer.rendering-engine.camera-engine");
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
const tsyringe_1 = require("tsyringe");
const OrthographicCamera_1 = require("./camera/OrthographicCamera");
const PerspectiveCamera_1 = require("./camera/PerspectiveCamera");
const LightScene_1 = require("./lights/LightScene");
let StandardViewer = class StandardViewer {
    constructor(properties, callbacks) {
        _StandardViewer_cameras.set(this, {});
        _StandardViewer_converter.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.Converter));
        _StandardViewer_eventEngine.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.EventEngine));
        _StandardViewer_inputValidator.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.InputValidator));
        _StandardViewer_lightScenes.set(this, {});
        _StandardViewer_logger.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.Logger));
        _StandardViewer_performanceEvaluator.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.PerformanceEvaluator));
        _StandardViewer_stateEngine.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.StateEngine));
        _StandardViewer_busyModeIDs.set(this, []);
        _StandardViewer_renderingEngine.set(this, void 0);
        try {
            __classPrivateFieldSet(this, _StandardViewer_renderingEngine, new viewer_rendering_engine_threejs_standard_1.RenderingEngine(properties), "f");
            tsyringe_1.container.registerInstance('renderingEngine', __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f"));
            if (!this.camera)
                this.createCamera(viewer_rendering_engine_camera_engine_1.CAMERATYPE.PERSPECTIVE, 'standard');
            this.update();
            callbacks.close = () => __awaiter(this, void 0, void 0, function* () {
                const closeResult = yield __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").close();
                __classPrivateFieldGet(this, _StandardViewer_eventEngine, "f").emitEvent(viewer_shared_services_1.EVENTTYPE.VIEWER.VIEWER_CLOSED, { viewerId: properties.id });
                if (!closeResult)
                    __classPrivateFieldGet(this, _StandardViewer_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${properties.id}): Was not able to close viewer completely, please disregard this viewer.`);
                return closeResult;
            });
            __classPrivateFieldGet(this, _StandardViewer_eventEngine, "f").emitEvent(viewer_shared_services_1.EVENTTYPE.VIEWER.VIEWER_CREATED, { viewerId: properties.id });
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${properties.id}).constructor: Viewer created.`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${properties.id}).constructor: Something unexpected happened.`, true);
        }
    }
    get ambientOcclusion() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").ambientOcclusion;
    }
    set ambientOcclusion(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).ambientOcclusion: Updating AmbientOcclusion to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).ambientOcclusion`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").ambientOcclusion = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).ambientOcclusion: ambientOcclusion was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).ambientOcclusion: Something unexpected happened.`, true);
        }
    }
    get ambientOcclusionIntensity() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").ambientOcclusionIntensity;
    }
    get animations() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").animations;
    }
    set ambientOcclusionIntensity(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).ambientOcclusionIntensity: Updating ambientOcclusionIntensity to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).ambientOcclusionIntensity`, value, 'factor');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").ambientOcclusionIntensity = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).ambientOcclusionIntensity: ambientOcclusionIntensity was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).ambientOcclusionIntensity: Something unexpected happened.`, true);
        }
    }
    get automaticResizing() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").automaticResizing;
    }
    set automaticResizing(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).automaticResizing: Updating AutomaticResizing to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).automaticResizing`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").automaticResizing = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).automaticResizing: automaticResizing was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).automaticResizing: Something unexpected happened.`, true);
        }
    }
    get beautyRenderBlendingDuration() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").beautyRenderBlendingDuration;
    }
    set beautyRenderBlendingDuration(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).beautyRenderBlendingDuration: Updating RenderBlendingDuration to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).beautyRenderBlendingDuration`, value, 'positive');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").beautyRenderBlendingDuration = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).beautyRenderBlendingDuration: beautyRenderBlendingDuration was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).beautyRenderBlendingDuration: Something unexpected happened.`, true);
        }
    }
    get beautyRenderDelay() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").beautyRenderDelay;
    }
    set beautyRenderDelay(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).beautyRenderDelay: Updating BeautyRenderDelay to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).beautyRenderDelay`, value, 'positive');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").beautyRenderDelay = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).beautyRenderDelay: beautyRenderDelay was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).beautyRenderDelay: Something unexpected happened.`, true);
        }
    }
    get blur() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").blur;
    }
    set blur(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).blur: Updating Blur to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).blur`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").blur = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).blur: blur was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).blur: Something unexpected happened.`, true);
        }
    }
    get blurSceneWhenBusy() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").blurSceneWhenBusy;
    }
    set blurSceneWhenBusy(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).blurSceneWhenBusy: Updating BlurSceneWhenBusy to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).blurSceneWhenBusy`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").blurSceneWhenBusy = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).blurSceneWhenBusy: blurSceneWhenBusy was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).blurSceneWhenBusy: Something unexpected happened.`, true);
        }
    }
    get camera() {
        if (__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.camera)
            return this.cameras[__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.camera.id];
        return null;
    }
    get cameras() {
        for (let c in __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.cameras) {
            if (!__classPrivateFieldGet(this, _StandardViewer_cameras, "f")[c])
                __classPrivateFieldGet(this, _StandardViewer_cameras, "f")[c] = __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.cameras[c].type === viewer_rendering_engine_camera_engine_1.CAMERATYPE.ORTHOGRAPHIC ? new OrthographicCamera_1.OrthographicCamera(__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.cameras[c], this) : new PerspectiveCamera_1.PerspectiveCamera(__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.cameras[c], this);
        }
        for (let c in __classPrivateFieldGet(this, _StandardViewer_cameras, "f")) {
            if (!__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.cameras[c])
                delete __classPrivateFieldGet(this, _StandardViewer_cameras, "f")[c];
        }
        return __classPrivateFieldGet(this, _StandardViewer_cameras, "f");
    }
    get clearAlpha() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").clearAlpha;
    }
    set clearAlpha(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).clearAlpha: Updating ClearAlpha to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).clearAlpha`, value, 'factor');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").clearAlpha = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).clearAlpha: clearAlpha was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).clearAlpha: Something unexpected happened.`, true);
        }
    }
    get clearColor() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").clearColor;
    }
    set clearColor(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).clearColor: Updating ClearColor to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).clearColor`, value, 'color');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").clearColor = __classPrivateFieldGet(this, _StandardViewer_converter, "f").toColor(value);
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).clearColor: clearColor was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).clearColor: Something unexpected happened.`, true);
        }
    }
    get environmentMap() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").environmentMap;
    }
    set environmentMap(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).environmentMap: Updating EnvironmentMap to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).environmentMap`, value, 'cubeMap');
            new Promise(resolve => {
                const token = __classPrivateFieldGet(this, _StandardViewer_eventEngine, "f").addListener(viewer_shared_services_1.EVENTTYPE.ENVIRONMENTMAP.ENVIRONMENTMAP_LOADED, (e) => {
                    const viewerEvent = e;
                    if (viewerEvent.viewerId !== this.id)
                        return;
                    if (viewerEvent.environmentMapId === value) {
                        __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).environmentMap: environmentMap was set to: ${value}`);
                        this.update();
                        __classPrivateFieldGet(this, _StandardViewer_eventEngine, "f").removeListener(token);
                        resolve();
                    }
                });
                __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").environmentMap = value;
            });
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).environmentMap: Something unexpected happened.`, true);
        }
    }
    get environmentMapAsBackground() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").environmentMapAsBackground;
    }
    set environmentMapAsBackground(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).environmentMapAsBackground: Updating EnvironmentMapAsBackground to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).environmentMapAsBackground`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").environmentMapAsBackground = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).environmentMapAsBackground: environmentMapAsBackground was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).environmentMapAsBackground: Something unexpected happened.`, true);
        }
    }
    get environmentMapResolution() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").environmentMapResolution;
    }
    set environmentMapResolution(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).environmentMapResolution: Updating EnvironmentMapResolution to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).environmentMapResolution`, value, 'string');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").environmentMapResolution = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).environmentMapResolution: environmentMapResolution was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).environmentMapResolution: Something unexpected happened.`, true);
        }
    }
    get gridVisibility() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").gridVisibility;
    }
    set gridVisibility(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).gridVisibility: Updating GridVisibility to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).gridVisibility`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").gridVisibility = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).gridVisibility: gridVisibility was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).gridVisibility: Something unexpected happened.`, true);
        }
    }
    get groundPlaneVisibility() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").groundPlaneVisibility;
    }
    set groundPlaneVisibility(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).groundPlaneVisibility: Updating GroundPlaneVisibility to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).groundPlaneVisibility`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").groundPlaneVisibility = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).groundPlaneVisibility: groundPlaneVisibility was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).groundPlaneVisibility: Something unexpected happened.`, true);
        }
    }
    get id() {
        if (!__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f"))
            return '';
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").id;
    }
    get lightScene() {
        if (__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.lightScene)
            return this.lightScenes[__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.lightScene.id];
        return null;
    }
    get lightSceneId() {
        if (__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.lightScene)
            return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.lightScene.id;
        return '';
    }
    set lightSceneId(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).lightScene: Updating LightScene to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).lightScene`, value, 'string');
            if (this.assignLightScene(value)) {
                __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightScene = value;
                __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).lightScene: lightScene was set to: ${value}`);
            }
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, e, `Viewer(${this.id}).lightScene: Something unexpected happened.`, true);
        }
    }
    get lightScenes() {
        for (let l in __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.lightScenes) {
            if (!__classPrivateFieldGet(this, _StandardViewer_lightScenes, "f")[l])
                __classPrivateFieldGet(this, _StandardViewer_lightScenes, "f")[l] = new LightScene_1.LightScene(__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.lightScenes[l], this);
        }
        for (let l in __classPrivateFieldGet(this, _StandardViewer_lightScenes, "f")) {
            if (!__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.lightScenes[l])
                delete __classPrivateFieldGet(this, _StandardViewer_lightScenes, "f")[l];
        }
        return __classPrivateFieldGet(this, _StandardViewer_lightScenes, "f");
    }
    get pointSize() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").pointSize;
    }
    set pointSize(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).pointSize: Updating PointSize to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).pointSize`, value, 'positive');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").pointSize = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).pointSize: pointSize was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).pointSize: Something unexpected happened.`, true);
        }
    }
    get renderingSettings() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").renderingSettings;
    }
    set renderingSettings(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).renderingSettings: Rendering settings were set to ${JSON.stringify(value)}.`);
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").renderingSettings = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).renderingSettings: rendering settings were set to: ${JSON.stringify(value)}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).renderingSettings: Something unexpected happened.`, true);
        }
    }
    get shadows() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").shadows;
    }
    set shadows(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).shadows: Updating Shadows to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).shadows`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").shadows = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).shadows: shadows was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).shadows: Something unexpected happened.`, true);
        }
    }
    get show() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").show;
    }
    set show(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).show: Updating Show to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).show`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").show = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).show: show was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).show: Something unexpected happened.`, true);
        }
    }
    get showStatistics() {
        return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").showStatistics;
    }
    set showStatistics(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).showStatistics: Updating ShowStatistics to ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).showStatistics`, value, 'boolean');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").showStatistics = value;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).showStatistics: showStatistics was set to: ${value}`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).showStatistics: Something unexpected happened.`, true);
        }
    }
    assignCamera(id) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).assignCamera: Assigning Camera with id ${id}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).assignCamera`, id, 'string');
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.assignCamera(id);
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).assignCamera: Camera with id ${id} assigned.`);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, e, `Viewer(${this.id}).assignCamera: Something unexpected happened.`, true);
        }
    }
    assignLightScene(id) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).assignLightScene: Assigning LightScene with id ${id}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).assignLightScene`, id, 'string');
            if (this.lightScene && this.lightScene.id === id) {
                __classPrivateFieldGet(this, _StandardViewer_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).assignLightScene: The light scene with id ${id} was already assigned.`);
                return true;
            }
            const r = __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.assignLightScene(id);
            if (r)
                __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightScene = id;
            if (r)
                __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).assignLightScene: Assigned light scene with id ${id}.`);
            if (!r)
                __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, new viewer_shared_services_1.SDError(`Viewer(${this.id}).assignLightScene: Could not assign light scene with id ${id}.`));
            this.update();
            return r;
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, e, `Viewer(${this.id}).assignLightScene: Something unexpected happened.`, true);
        }
    }
    createCamera(type, id) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createCamera: Creating Camera with id ${id} and type ${type}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createCamera`, type, 'enum', true, Object.values(viewer_rendering_engine_camera_engine_1.CAMERATYPE));
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createCamera`, id, 'string', false);
            const cameraLogic = __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.createCamera(type, id);
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createCamera: ${cameraLogic.type === viewer_rendering_engine_camera_engine_1.CAMERATYPE.ORTHOGRAPHIC ? 'Orthographic' : 'Perspective'} camera with id ${id} created.`);
            this.assignCamera(cameraLogic.id);
            return this.cameras[cameraLogic.id];
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, e, `Viewer(${this.id}).createCamera: Something unexpected happened.`, true);
        }
    }
    createLightScene(properties) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).createLightScene: Creating LightScene with properties ${properties}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).createLightScene`, properties, 'object', false);
            const props = Object.assign({}, properties);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).createLightScene`, props.name, 'string', false);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).createLightScene`, props.standard, 'boolean', false);
            const lightSceneLogic = __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.createLightScene(props);
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).createLightScene: New light scene with id ${lightSceneLogic.id} created.`);
            if (lightSceneLogic.id)
                this.assignLightScene(lightSceneLogic.id);
            this.update();
            return this.lightScenes[lightSceneLogic.id];
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, e, `Viewer(${this.id}).createLightScene: Something unexpected happened.`, true);
        }
    }
    createOrthographicCamera(id) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createOrthographicCamera: Creating OrthographicCamera with id ${id}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createOrthographicCamera`, id, 'string', false);
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createOrthographicCamera: Orthographic camera with id ${id} created.`);
            return this.createCamera(viewer_rendering_engine_camera_engine_1.CAMERATYPE.ORTHOGRAPHIC, id);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, e, `Viewer(${this.id}).createOrthographicCamera: Something unexpected happened.`, true);
        }
    }
    createPerspectiveCamera(id) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createPerspectiveCamera: Creating PerspectiveCamera with id ${id}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createPerspectiveCamera`, id, 'string', false);
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).createPerspectiveCamera: Perspective camera with id ${id} created.`);
            return this.createCamera(viewer_rendering_engine_camera_engine_1.CAMERATYPE.PERSPECTIVE, id);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, e, `Viewer(${this.id}).createPerspectiveCamera: Something unexpected happened.`, true);
        }
    }
    deregisterBusyMode(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).deregisterBusyMode: Deregistering busy mode for id ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).deregisterBusyMode`, value, 'string');
            if (!__classPrivateFieldGet(this, _StandardViewer_busyModeIDs, "f").includes(value))
                return false;
            __classPrivateFieldGet(this, _StandardViewer_busyModeIDs, "f").splice(__classPrivateFieldGet(this, _StandardViewer_busyModeIDs, "f").indexOf(value), 1);
            if (__classPrivateFieldGet(this, _StandardViewer_busyModeIDs, "f").length === 0)
                __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").busy = false;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).deregisterBusyMode: Busy mode was deregistered for id: ${value}`);
            this.update();
            return true;
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).deregisterBusyMode: Something unexpected happened.`, true);
        }
    }
    getScreenshot(type, quality) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).getScreenshot: Getting getScreenshot with type ${type} and quality ${quality}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).getScreenshot`, type, 'string', false);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).getScreenshot`, quality, 'factor', false);
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).getScreenshot: screenshot was requested`);
            return __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").getScreenshot(type, quality);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).getScreenshot: Something unexpected happened.`, true);
        }
    }
    registerBusyMode(value) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).registerBusyMode: Registering busy mode for id ${value}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).registerBusyMode`, value, 'string');
            if (__classPrivateFieldGet(this, _StandardViewer_busyModeIDs, "f").includes(value))
                return false;
            __classPrivateFieldGet(this, _StandardViewer_busyModeIDs, "f").push(value);
            if (this.blurSceneWhenBusy === true)
                __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").busy = true;
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).registerBusyMode: Busy mode was registered for id: ${value}`);
            this.update();
            return true;
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).registerBusyMode: Something unexpected happened.`, true);
        }
    }
    removeCamera(id) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).removeCamera: Removing Camera with id ${id}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).removeCamera`, id, 'string');
            const r = __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").cameraEngine.removeCamera(id);
            if (r)
                __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).removeCamera: Camera with id ${id} removed.`);
            if (!r)
                __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, `Viewer(${this.id}).removeCamera: Could not remove camera with id ${id}.`);
            this.update();
            return r;
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.CAMERA, e, `Viewer(${this.id}).removeCamera: Something unexpected happened.`, true);
        }
    }
    removeLightScene(id) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).removeLightScene: Removing LightScene with id ${id}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).removeLightScene`, id, 'string');
            const r = __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").lightEngine.removeLightScene(id);
            if (r)
                __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).removeLightScene: Light scene with id ${id} removed.`);
            if (!r)
                __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, `Viewer(${this.id}).removeLightScene: Could not remove light scene with id ${id}.`);
            this.update();
            return r;
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.LIGHT, e, `Viewer(${this.id}).removeLightScene: Something unexpected happened.`, true);
        }
    }
    reset() {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).reset: Resetting Viewer.`);
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").reset();
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).reset: Something unexpected happened.`, true);
        }
    }
    resize(width, height) {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).resize: Resizing Viewer to ${width} / ${height}.`);
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).resize`, width, 'number');
            __classPrivateFieldGet(this, _StandardViewer_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).resize`, height, 'number');
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).resize: Resized Viewer to ${width} / ${height}.`);
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").resize(width, height);
            this.update();
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).resize: Something unexpected happened.`, true);
        }
    }
    update() {
        try {
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).update: Updating Viewer.`);
            if (!__classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f"))
                return;
            __classPrivateFieldGet(this, _StandardViewer_renderingEngine, "f").update();
            __classPrivateFieldGet(this, _StandardViewer_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, `Viewer(${this.id}).update: Updated viewer.`);
            __classPrivateFieldGet(this, _StandardViewer_eventEngine, "f").emitEvent(viewer_shared_services_1.EVENTTYPE.VIEWER.VIEWER_UPDATED, { viewerId: this.id });
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _StandardViewer_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.VIEWER, e, `Viewer(${this.id}).update: Something unexpected happened.`, true);
        }
    }
};
_StandardViewer_cameras = new WeakMap(), _StandardViewer_converter = new WeakMap(), _StandardViewer_eventEngine = new WeakMap(), _StandardViewer_inputValidator = new WeakMap(), _StandardViewer_lightScenes = new WeakMap(), _StandardViewer_logger = new WeakMap(), _StandardViewer_performanceEvaluator = new WeakMap(), _StandardViewer_stateEngine = new WeakMap(), _StandardViewer_busyModeIDs = new WeakMap(), _StandardViewer_renderingEngine = new WeakMap();
StandardViewer = __decorate([
    tsyringe_1.injectable(),
    __metadata("design:paramtypes", [Object, Object])
], StandardViewer);
exports.StandardViewer = StandardViewer;
//# sourceMappingURL=StandardViewer.js.map