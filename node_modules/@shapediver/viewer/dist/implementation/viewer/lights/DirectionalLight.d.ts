import { DirectionalLight as DirectionalLightLogic } from '@shapediver/viewer.rendering-engine.light-engine';
import { vec3 } from 'gl-matrix';
import { AbstractLight } from './AbstractLight';
import { IDirectionalLight } from '../../../interfaces/viewer/lights/IDirectionalLight';
import { IViewer } from '../../../interfaces/viewer/IViewer';
export declare class DirectionalLight extends AbstractLight implements IDirectionalLight {
    #private;
    constructor(light: DirectionalLightLogic, viewer: IViewer);
    get castShadow(): boolean;
    set castShadow(value: boolean);
    get direction(): vec3;
    set direction(value: vec3);
    get shadowMapBias(): number;
    set shadowMapBias(value: number);
    get shadowMapResolution(): number;
    set shadowMapResolution(value: number);
}
//# sourceMappingURL=DirectionalLight.d.ts.map