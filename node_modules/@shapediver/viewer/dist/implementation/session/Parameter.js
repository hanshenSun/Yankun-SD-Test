"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Parameter_choices, _Parameter_converter, _Parameter_decimalplaces, _Parameter_defaultValue, _Parameter_defval, _Parameter_expression, _Parameter_format, _Parameter_group, _Parameter_id, _Parameter_inputValidator, _Parameter_logger, _Parameter_max, _Parameter_min, _Parameter_name, _Parameter_session, _Parameter_sessionEngine, _Parameter_structure, _Parameter_type, _Parameter_visualization, _Parameter_displayname, _Parameter_hidden, _Parameter_lastValidatedValue, _Parameter_order, _Parameter_tooltip, _Parameter_sessionValue, _Parameter_value;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Parameter = exports.PARAMETERVISUALIZATION = exports.PARAMETERTYPE = void 0;
const viewer_shared_services_1 = require("@shapediver/viewer.shared.services");
const tsyringe_1 = require("tsyringe");
var PARAMETERTYPE;
(function (PARAMETERTYPE) {
    PARAMETERTYPE["FLOAT"] = "Float";
    PARAMETERTYPE["INT"] = "Int";
    PARAMETERTYPE["EVEN"] = "Even";
    PARAMETERTYPE["ODD"] = "Odd";
    PARAMETERTYPE["STRING"] = "String";
    PARAMETERTYPE["COLOR"] = "Color";
    PARAMETERTYPE["STRINGLIST"] = "StringList";
    PARAMETERTYPE["BOOL"] = "Bool";
    PARAMETERTYPE["TIME"] = "Time";
    PARAMETERTYPE["FILE"] = "File";
    PARAMETERTYPE["SNUMBER"] = "sNumber";
    PARAMETERTYPE["SINTEGER"] = "sInteger";
    PARAMETERTYPE["SSTRING"] = "sString";
    PARAMETERTYPE["SCOLOR"] = "sColor";
    PARAMETERTYPE["SBOOL"] = "sBool";
    PARAMETERTYPE["STIME"] = "sTime";
    PARAMETERTYPE["SBITMAP"] = "sBitmap";
    PARAMETERTYPE["SDOMAIN"] = "sDomain";
    PARAMETERTYPE["SDOMAIN2D"] = "sDomain2D";
    PARAMETERTYPE["SPOINT"] = "sPoint";
    PARAMETERTYPE["SLINE"] = "sLine";
    PARAMETERTYPE["SVECTOR"] = "sVector";
    PARAMETERTYPE["SBOX"] = "sBox";
    PARAMETERTYPE["SPLANE"] = "sPlane";
    PARAMETERTYPE["SRECTANGLE"] = "sRectangle";
    PARAMETERTYPE["SCURVE"] = "sCurve";
    PARAMETERTYPE["SCIRCLE"] = "sCircle";
    PARAMETERTYPE["SMESH"] = "sMesh";
    PARAMETERTYPE["SSURFACE"] = "sSurface";
    PARAMETERTYPE["SBREP"] = "sBrep";
    PARAMETERTYPE["SSUBDIV"] = "sSubdiv";
})(PARAMETERTYPE = exports.PARAMETERTYPE || (exports.PARAMETERTYPE = {}));
var PARAMETERVISUALIZATION;
(function (PARAMETERVISUALIZATION) {
    PARAMETERVISUALIZATION["SLIDER"] = "slider";
    PARAMETERVISUALIZATION["SEQUENCE"] = "sequence";
    PARAMETERVISUALIZATION["CYCLE"] = "cycle";
    PARAMETERVISUALIZATION["DROPDOWN"] = "dropdown";
    PARAMETERVISUALIZATION["CHECKLIST"] = "checklist";
    PARAMETERVISUALIZATION["CLOCK"] = "color";
    PARAMETERVISUALIZATION["CALENDAR"] = "calendar";
    PARAMETERVISUALIZATION["TOGGLE"] = "toggle";
    PARAMETERVISUALIZATION["SWATCH"] = "swatch";
    PARAMETERVISUALIZATION["BUTTON"] = "button";
    PARAMETERVISUALIZATION["DIAL"] = "dial";
    PARAMETERVISUALIZATION["TEXT"] = "text";
})(PARAMETERVISUALIZATION = exports.PARAMETERVISUALIZATION || (exports.PARAMETERVISUALIZATION = {}));
class Parameter {
    constructor(session, sessionEngine, paramDef) {
        _Parameter_choices.set(this, void 0);
        _Parameter_converter.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.Converter));
        _Parameter_decimalplaces.set(this, void 0);
        _Parameter_defaultValue.set(this, void 0);
        _Parameter_defval.set(this, void 0);
        _Parameter_expression.set(this, void 0);
        _Parameter_format.set(this, void 0);
        _Parameter_group.set(this, void 0);
        _Parameter_id.set(this, void 0);
        _Parameter_inputValidator.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.InputValidator));
        _Parameter_logger.set(this, tsyringe_1.container.resolve(viewer_shared_services_1.Logger));
        _Parameter_max.set(this, void 0);
        _Parameter_min.set(this, void 0);
        _Parameter_name.set(this, void 0);
        _Parameter_session.set(this, void 0);
        _Parameter_sessionEngine.set(this, void 0);
        _Parameter_structure.set(this, void 0);
        _Parameter_type.set(this, void 0);
        _Parameter_visualization.set(this, void 0);
        _Parameter_displayname.set(this, void 0);
        _Parameter_hidden.set(this, false);
        _Parameter_lastValidatedValue.set(this, void 0);
        _Parameter_order.set(this, void 0);
        _Parameter_tooltip.set(this, void 0);
        _Parameter_sessionValue.set(this, void 0);
        _Parameter_value.set(this, void 0);
        try {
            __classPrivateFieldSet(this, _Parameter_session, session, "f");
            __classPrivateFieldSet(this, _Parameter_sessionEngine, sessionEngine, "f");
            __classPrivateFieldSet(this, _Parameter_id, paramDef.id, "f");
            __classPrivateFieldSet(this, _Parameter_defval, paramDef.defval, "f");
            __classPrivateFieldSet(this, _Parameter_name, paramDef.name, "f");
            __classPrivateFieldSet(this, _Parameter_type, paramDef.type, "f");
            if (paramDef.choices !== undefined)
                __classPrivateFieldSet(this, _Parameter_choices, paramDef.choices, "f");
            if (paramDef.decimalplaces !== undefined)
                __classPrivateFieldSet(this, _Parameter_decimalplaces, +paramDef.decimalplaces, "f");
            if (paramDef.expression !== undefined)
                __classPrivateFieldSet(this, _Parameter_expression, paramDef.expression, "f");
            if (paramDef.format !== undefined)
                __classPrivateFieldSet(this, _Parameter_format, paramDef.format, "f");
            if (paramDef.min !== undefined)
                __classPrivateFieldSet(this, _Parameter_min, +paramDef.min, "f");
            if (paramDef.max !== undefined)
                __classPrivateFieldSet(this, _Parameter_max, +paramDef.max, "f");
            if (paramDef.visualization !== undefined)
                __classPrivateFieldSet(this, _Parameter_visualization, paramDef.visualization, "f");
            if (paramDef.structure !== undefined)
                __classPrivateFieldSet(this, _Parameter_structure, paramDef.structure, "f");
            if (paramDef.group !== undefined)
                __classPrivateFieldSet(this, _Parameter_group, paramDef.group, "f");
            if (paramDef.tooltip !== undefined)
                __classPrivateFieldSet(this, _Parameter_tooltip, paramDef.tooltip, "f");
            if (paramDef.displayname !== undefined)
                __classPrivateFieldSet(this, _Parameter_displayname, paramDef.displayname, "f");
            if (paramDef.order !== undefined)
                __classPrivateFieldSet(this, _Parameter_order, paramDef.order, "f");
            if (paramDef.hidden !== undefined)
                __classPrivateFieldSet(this, _Parameter_hidden, paramDef.hidden, "f");
            if (__classPrivateFieldGet(this, _Parameter_type, "f") === PARAMETERTYPE.BOOL || __classPrivateFieldGet(this, _Parameter_type, "f") === PARAMETERTYPE.SBOOL) {
                __classPrivateFieldSet(this, _Parameter_defaultValue, (__classPrivateFieldGet(this, _Parameter_defval, "f") === 'true'), "f");
            }
            else if (__classPrivateFieldGet(this, _Parameter_type, "f") === PARAMETERTYPE.EVEN || __classPrivateFieldGet(this, _Parameter_type, "f") === PARAMETERTYPE.FLOAT || __classPrivateFieldGet(this, _Parameter_type, "f") === PARAMETERTYPE.INT || __classPrivateFieldGet(this, _Parameter_type, "f") === PARAMETERTYPE.ODD || __classPrivateFieldGet(this, _Parameter_type, "f") === PARAMETERTYPE.SINTEGER || __classPrivateFieldGet(this, _Parameter_type, "f") === PARAMETERTYPE.SNUMBER) {
                __classPrivateFieldSet(this, _Parameter_defaultValue, +__classPrivateFieldGet(this, _Parameter_defval, "f"), "f");
            }
            else {
                __classPrivateFieldSet(this, _Parameter_defaultValue, __classPrivateFieldGet(this, _Parameter_defval, "f"), "f");
            }
            if (__classPrivateFieldGet(this, _Parameter_type, "f") === PARAMETERTYPE.COLOR) {
                this.convertColor = (color) => {
                    return __classPrivateFieldGet(this, _Parameter_converter, "f").toColor(color);
                };
            }
            __classPrivateFieldSet(this, _Parameter_value, __classPrivateFieldGet(this, _Parameter_defaultValue, "f"), "f");
            __classPrivateFieldSet(this, _Parameter_sessionValue, __classPrivateFieldGet(this, _Parameter_value, "f"), "f");
            __classPrivateFieldSet(this, _Parameter_lastValidatedValue, __classPrivateFieldGet(this, _Parameter_value, "f"), "f");
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).constructor: Initialized parameter ${JSON.stringify(paramDef)}.`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${paramDef.id}).constructor: Something unexpected happened.`, true);
        }
    }
    get choices() {
        return __classPrivateFieldGet(this, _Parameter_choices, "f");
    }
    get decimalplaces() {
        return __classPrivateFieldGet(this, _Parameter_decimalplaces, "f");
    }
    get defval() {
        return __classPrivateFieldGet(this, _Parameter_defval, "f");
    }
    get displayname() {
        return __classPrivateFieldGet(this, _Parameter_displayname, "f");
    }
    set displayname(value) {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).displayname: Updating DisplayName to ${value}.`);
            __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).displayname`, value, 'string', false);
            __classPrivateFieldSet(this, _Parameter_displayname, value, "f");
            __classPrivateFieldGet(this, _Parameter_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).displayname: DisplayName was updated to ${this.displayname}.`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).displayname: Something unexpected happened.`, true);
        }
    }
    get expression() {
        return __classPrivateFieldGet(this, _Parameter_expression, "f");
    }
    get format() {
        return __classPrivateFieldGet(this, _Parameter_format, "f");
    }
    get group() {
        return __classPrivateFieldGet(this, _Parameter_group, "f");
    }
    get hidden() {
        return __classPrivateFieldGet(this, _Parameter_hidden, "f");
    }
    set hidden(value) {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).hidden: Updating Hidden to ${value}.`);
            __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).hidden`, value, 'boolean');
            __classPrivateFieldSet(this, _Parameter_hidden, value, "f");
            __classPrivateFieldGet(this, _Parameter_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).hidden: Hidden was updated to ${this.hidden}.`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).hidden: Something unexpected happened.`, true);
        }
    }
    get id() {
        return __classPrivateFieldGet(this, _Parameter_id, "f");
    }
    get lastValidatedValue() {
        return __classPrivateFieldGet(this, _Parameter_lastValidatedValue, "f");
    }
    get max() {
        return __classPrivateFieldGet(this, _Parameter_max, "f");
    }
    get min() {
        return __classPrivateFieldGet(this, _Parameter_min, "f");
    }
    get name() {
        return __classPrivateFieldGet(this, _Parameter_name, "f");
    }
    get order() {
        return __classPrivateFieldGet(this, _Parameter_order, "f");
    }
    set order(value) {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).order: Updating Order to ${value}.`);
            __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).order`, value, 'number', false);
            __classPrivateFieldSet(this, _Parameter_order, value, "f");
            __classPrivateFieldGet(this, _Parameter_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).order: Order was updated to ${this.order}.`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).order: Something unexpected happened.`, true);
        }
    }
    get sessionValue() {
        return __classPrivateFieldGet(this, _Parameter_sessionValue, "f");
    }
    set sessionValue(value) {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).sessionValue: Updating SessionValue to ${value}.`);
            if (this.isValid(value, true)) {
                __classPrivateFieldSet(this, _Parameter_sessionValue, value, "f");
                __classPrivateFieldGet(this, _Parameter_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).sessionValue: SessionValue was updated to ${this.value}.`);
            }
            else {
                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).sessionValue: Could not validate value.`);
                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                throw error;
            }
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).sessionValue: Something unexpected happened.`, true);
        }
    }
    get structure() {
        return __classPrivateFieldGet(this, _Parameter_structure, "f");
    }
    get tooltip() {
        return __classPrivateFieldGet(this, _Parameter_tooltip, "f");
    }
    set tooltip(value) {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).tooltip: Updating tooltip to ${value}.`);
            __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).tooltip`, value, 'string', false);
            __classPrivateFieldSet(this, _Parameter_tooltip, value, "f");
            __classPrivateFieldGet(this, _Parameter_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).tooltip: tooltip was updated to ${this.tooltip}.`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).tooltip: Something unexpected happened.`, true);
        }
    }
    get type() {
        return __classPrivateFieldGet(this, _Parameter_type, "f");
    }
    get value() {
        return __classPrivateFieldGet(this, _Parameter_value, "f");
    }
    set value(value) {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).value: Updating Value to ${value}.`);
            if (this.isValid(value, true)) {
                __classPrivateFieldSet(this, _Parameter_value, value, "f");
                __classPrivateFieldSet(this, _Parameter_lastValidatedValue, this.value, "f");
                __classPrivateFieldGet(this, _Parameter_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).value: Value was updated to ${this.value}.`);
                if (__classPrivateFieldGet(this, _Parameter_session, "f").automaticUpdate)
                    __classPrivateFieldGet(this, _Parameter_session, "f").customize();
            }
            else {
                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).value: Could not validate value.`);
                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                throw error;
            }
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).value: Something unexpected happened.`, true);
        }
    }
    get visualization() {
        return __classPrivateFieldGet(this, _Parameter_visualization, "f");
    }
    isValid(value, throwError = false) {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: Checking value ${value}.`);
            try {
                switch (true) {
                    case this.type === PARAMETERTYPE.BOOL || this.type === PARAMETERTYPE.SBOOL:
                        if (typeof value === 'string') {
                            if (!(value === 'true' || value === 'false')) {
                                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: The value ${value} is a string that is neither true or false.`);
                                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                                throw error;
                            }
                        }
                        else {
                            __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid`, value, 'boolean');
                        }
                        break;
                    case this.type === PARAMETERTYPE.COLOR || this.type === PARAMETERTYPE.SCOLOR:
                        __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid`, value, 'color');
                        break;
                    case this.type === PARAMETERTYPE.FILE:
                        __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid`, value, 'file');
                        break;
                    case this.type === PARAMETERTYPE.EVEN || this.type === PARAMETERTYPE.FLOAT || this.type === PARAMETERTYPE.INT || this.type === PARAMETERTYPE.ODD || this.type === PARAMETERTYPE.SINTEGER || this.type === PARAMETERTYPE.SNUMBER:
                        let temp = value;
                        if (typeof value === 'string')
                            temp = +value;
                        __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid`, temp, 'number');
                        if (this.type === PARAMETERTYPE.EVEN) {
                            if (temp % 2 !== 0) {
                                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: The value ${value} is not even.`);
                                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                                throw error;
                            }
                        }
                        else if (this.type === PARAMETERTYPE.ODD) {
                            if (temp % 2 === 0) {
                                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: The value ${value} is not odd.`);
                                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                                throw error;
                            }
                        }
                        else if (this.type === PARAMETERTYPE.INT || this.type === PARAMETERTYPE.SINTEGER) {
                            if (!Number.isInteger(temp)) {
                                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: The value ${value} is not an integer.`);
                                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                                throw error;
                            }
                        }
                        if (this.min || this.min === 0)
                            if (temp < this.min) {
                                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: The value ${value} is smaller than the minimum ${this.min}.`);
                                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                                throw error;
                            }
                        if (this.max || this.max === 0)
                            if (temp > this.max) {
                                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: The value ${value} is larger than the maximum ${this.max}.`);
                                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                                throw error;
                            }
                        if (this.decimalplaces || this.decimalplaces === 0) {
                            const numStr = temp + '';
                            let decimalplaces = 0;
                            if (numStr.includes('.'))
                                decimalplaces = numStr.split('.')[1].length;
                            if (this.decimalplaces < decimalplaces) {
                                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: The value ${value} has not the correct number of decimalplaces (${this.decimalplaces}).`);
                                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                                throw error;
                            }
                        }
                        break;
                    case this.type === PARAMETERTYPE.STRINGLIST:
                        __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid`, value, 'string');
                        const choicesChecker = (v) => {
                            const temp = +v;
                            __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid`, temp, 'number');
                            if (temp < 0 || temp > this.choices.length - 1) {
                                const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: The value ${v} is not within the range of the defined number choices.`);
                                __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                                throw error;
                            }
                        };
                        if (this.visualization === PARAMETERVISUALIZATION.CHECKLIST) {
                            if (value.includes(',')) {
                                const values = value.split(',');
                                for (let i = 0; i < values.length; i++) {
                                    if (values.filter(item => item === values[i]).length !== 1) {
                                        const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: The value ${values[i]} exists multiple times, but should only exist once.`);
                                        __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                                        throw error;
                                    }
                                    choicesChecker(values[i]);
                                }
                            }
                            else {
                                let temp = value;
                                if (typeof value === 'string')
                                    temp = +value;
                                __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid`, temp, 'number');
                                choicesChecker(value);
                            }
                        }
                        else {
                            let temp = value;
                            if (typeof value === 'string')
                                temp = +value;
                            __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid`, temp, 'number');
                            choicesChecker(value);
                        }
                        break;
                    default:
                        __classPrivateFieldGet(this, _Parameter_inputValidator, "f").validateAndError(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid`, value, 'string');
                        break;
                }
            }
            catch (e) {
                if (throwError)
                    throw e;
                return false;
            }
            return true;
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).isValid: Something unexpected happened.`, true);
        }
    }
    resetToDefaultValue() {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).resetToDefaultValue: Resetting value ${this.value} to default value ${__classPrivateFieldGet(this, _Parameter_defaultValue, "f")}.`);
            __classPrivateFieldSet(this, _Parameter_value, __classPrivateFieldGet(this, _Parameter_defaultValue, "f"), "f");
            __classPrivateFieldGet(this, _Parameter_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).resetToDefaultValue: value was set to default value ${__classPrivateFieldGet(this, _Parameter_defaultValue, "f")}.`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).resetToDefaultValue: Something unexpected happened.`, true);
        }
    }
    resetToSessionValue() {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).resetToSessionValue: Resetting value ${this.value} to last session value ${this.sessionValue}.`);
            __classPrivateFieldSet(this, _Parameter_value, this.sessionValue, "f");
            __classPrivateFieldGet(this, _Parameter_logger, "f").info(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).resetToSessionValue: value was set to last session value ${this.sessionValue}.`);
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).resetToSessionValue: Something unexpected happened.`, true);
        }
    }
    stringify() {
        try {
            __classPrivateFieldGet(this, _Parameter_logger, "f").debugLow(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).stringify: Stringifying value.`);
            switch (true) {
                case this.type === PARAMETERTYPE.BOOL || this.type === PARAMETERTYPE.SBOOL:
                    return typeof this.value === 'string' ? this.value : this.value + '';
                case this.type === PARAMETERTYPE.COLOR || this.type === PARAMETERTYPE.SCOLOR:
                    return __classPrivateFieldGet(this, _Parameter_converter, "f").toHex8Color(this.value);
                case this.type === PARAMETERTYPE.FILE:
                    if (typeof this.value !== 'string') {
                        const error = new viewer_shared_services_1.SDError(`Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).stringify: Error in stringify. Cannot stringify FileParameter that has not been uploaded yet.`);
                        __classPrivateFieldGet(this, _Parameter_logger, "f").warn(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, error.message);
                        throw error;
                    }
                    return this.value;
                case this.type === PARAMETERTYPE.EVEN || this.type === PARAMETERTYPE.FLOAT || this.type === PARAMETERTYPE.INT || this.type === PARAMETERTYPE.ODD || this.type === PARAMETERTYPE.SINTEGER || this.type === PARAMETERTYPE.SNUMBER:
                    return typeof this.value === 'string' ? this.value : this.value + '';
                default:
                    return this.value;
            }
        }
        catch (e) {
            if (e instanceof viewer_shared_services_1.SDError)
                throw e;
            throw __classPrivateFieldGet(this, _Parameter_logger, "f").error(viewer_shared_services_1.LOGGINGTOPIC.PARAMETER, e, `Parameter(${__classPrivateFieldGet(this, _Parameter_id, "f")}).stringify: Something unexpected happened.`, true);
        }
    }
}
exports.Parameter = Parameter;
_Parameter_choices = new WeakMap(), _Parameter_converter = new WeakMap(), _Parameter_decimalplaces = new WeakMap(), _Parameter_defaultValue = new WeakMap(), _Parameter_defval = new WeakMap(), _Parameter_expression = new WeakMap(), _Parameter_format = new WeakMap(), _Parameter_group = new WeakMap(), _Parameter_id = new WeakMap(), _Parameter_inputValidator = new WeakMap(), _Parameter_logger = new WeakMap(), _Parameter_max = new WeakMap(), _Parameter_min = new WeakMap(), _Parameter_name = new WeakMap(), _Parameter_session = new WeakMap(), _Parameter_sessionEngine = new WeakMap(), _Parameter_structure = new WeakMap(), _Parameter_type = new WeakMap(), _Parameter_visualization = new WeakMap(), _Parameter_displayname = new WeakMap(), _Parameter_hidden = new WeakMap(), _Parameter_lastValidatedValue = new WeakMap(), _Parameter_order = new WeakMap(), _Parameter_tooltip = new WeakMap(), _Parameter_sessionValue = new WeakMap(), _Parameter_value = new WeakMap();
//# sourceMappingURL=Parameter.js.map