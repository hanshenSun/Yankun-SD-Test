import { ShapeDiverResponseParameter, ShapeDiverResponseParameterGroup, ShapeDiverResponseParameterStructure } from '@shapediver/api.geometry-api-dto-v1';
import { Session } from '@shapediver/viewer.session-engine.session-engine';
import { IParameter } from '../../interfaces/session/IParameter';
import { ISession } from '../../interfaces/session/ISession';
export declare enum PARAMETERTYPE {
    FLOAT = "Float",
    INT = "Int",
    EVEN = "Even",
    ODD = "Odd",
    STRING = "String",
    COLOR = "Color",
    STRINGLIST = "StringList",
    BOOL = "Bool",
    TIME = "Time",
    FILE = "File",
    SNUMBER = "sNumber",
    SINTEGER = "sInteger",
    SSTRING = "sString",
    SCOLOR = "sColor",
    SBOOL = "sBool",
    STIME = "sTime",
    SBITMAP = "sBitmap",
    SDOMAIN = "sDomain",
    SDOMAIN2D = "sDomain2D",
    SPOINT = "sPoint",
    SLINE = "sLine",
    SVECTOR = "sVector",
    SBOX = "sBox",
    SPLANE = "sPlane",
    SRECTANGLE = "sRectangle",
    SCURVE = "sCurve",
    SCIRCLE = "sCircle",
    SMESH = "sMesh",
    SSURFACE = "sSurface",
    SBREP = "sBrep",
    SSUBDIV = "sSubdiv"
}
export declare enum PARAMETERVISUALIZATION {
    SLIDER = "slider",
    SEQUENCE = "sequence",
    CYCLE = "cycle",
    DROPDOWN = "dropdown",
    CHECKLIST = "checklist",
    CLOCK = "color",
    CALENDAR = "calendar",
    TOGGLE = "toggle",
    SWATCH = "swatch",
    BUTTON = "button",
    DIAL = "dial",
    TEXT = "text"
}
export declare class Parameter<T> implements IParameter<T> {
    #private;
    constructor(session: ISession, sessionEngine: Session, paramDef: ShapeDiverResponseParameter);
    get choices(): string[] | undefined;
    get decimalplaces(): number | undefined;
    get defval(): string;
    get displayname(): string | undefined;
    set displayname(value: string | undefined);
    get expression(): string | undefined;
    get format(): string[] | undefined;
    get group(): ShapeDiverResponseParameterGroup | undefined;
    get hidden(): boolean;
    set hidden(value: boolean);
    get id(): string;
    get lastValidatedValue(): T | string;
    get max(): number | undefined;
    get min(): number | undefined;
    get name(): string;
    get order(): number | undefined;
    set order(value: number | undefined);
    get sessionValue(): T | string;
    set sessionValue(value: T | string);
    get structure(): ShapeDiverResponseParameterStructure | undefined;
    get tooltip(): string | undefined;
    set tooltip(value: string | undefined);
    get type(): PARAMETERTYPE;
    get value(): T | string;
    set value(value: T | string);
    get visualization(): PARAMETERVISUALIZATION | undefined;
    isValid(value: any, throwError?: boolean): boolean;
    resetToDefaultValue(): void;
    resetToSessionValue(): void;
    stringify(): string;
}
//# sourceMappingURL=Parameter.d.ts.map