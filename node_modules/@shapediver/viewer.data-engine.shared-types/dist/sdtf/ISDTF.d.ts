import { GEOMETRYTYPEHINT, PRIMITIVETYPEHINT } from "@shapediver/viewer.shared.types";
export interface ISDTF_Accessor {
    bufferView: number;
    id: string;
}
export interface ISDTF_Attribute {
    [key: string]: {
        typeHint: number;
        accessor?: number;
        value?: any;
    };
}
export interface ISDTF_Buffer {
    byteLength: number;
    uri?: string;
}
export interface ISDTF_BufferView {
    buffer: number;
    byteLength: number;
    byteOffset: number;
    contentEncoding?: string;
    contentType: string;
    name?: string;
}
export interface ISDTF_Chunk extends ISDTF_Node {
}
export interface ISDTF_Item {
    accessor?: number;
    attributes?: number;
    typeHint: number;
    value?: any;
}
export interface ISDTF_Node {
    attributes?: number;
    items: number[];
    name?: string;
    nodes?: number[];
    typeHint?: number;
}
export interface ISDTF_TypeHint {
    name: PRIMITIVETYPEHINT | GEOMETRYTYPEHINT | string;
}
export interface ISDTF {
    accessors: ISDTF_Accessor[];
    attributes: ISDTF_Attribute[];
    bufferViews: ISDTF_BufferView[];
    buffers: ISDTF_Buffer[];
    chunks: ISDTF_Chunk[];
    items: ISDTF_Item[];
    nodes: ISDTF_Node[];
    typeHints: ISDTF_TypeHint[];
    version: number;
}
//# sourceMappingURL=ISDTF.d.ts.map