import { ShapeDiverResponseExport, ShapeDiverResponseExportDefinition } from "./SdResponseDtoExport";
import { ShapeDiverResponseCollection } from "./SdResponseDtoModel";
import { ShapeDiverResponseModelStatistics } from "./SdResponseDtoModelStatistics";
import { ShapeDiverResponseOutput, ShapeDiverResponseOutputDefinition } from "./SdResponseDtoOutput";
export declare type ShapeDiverResponseDto = ShapeDiverResponseBase | ShapeDiverModelConfig | ShapeDiverResponseModelStatistics;
export interface ShapeDiverResponseBase {
    version: string;
    message?: string;
    collection?: ShapeDiverResponseCollection;
    actions?: ShapeDiverResponseAction[];
    templates?: ShapeDiverResponseTemplate[];
    config?: object;
    name?: string;
    parameters?: {
        [id: string]: ShapeDiverResponseParameter;
    };
    outputs?: {
        [id: string]: ShapeDiverResponseOutput | ShapeDiverResponseOutputDefinition;
    };
    exports?: {
        [id: string]: ShapeDiverResponseExport | ShapeDiverResponseExportDefinition;
    };
    gltf?: ShapeDiverResponseGltfUpload;
}
export declare type ShapeDiverModelConfig = object;
export interface ShapeDiverResponseAction {
    name: string;
    title: string;
    href: string;
    method: string;
    template?: string;
}
export interface ShapeDiverResponseTemplate {
    name: string;
    title: string;
    data: object;
}
export interface ShapeDiverResponseParameter {
    id: string;
    choices?: string[];
    decimalplaces?: number;
    defval: string;
    expression?: string;
    format?: string[];
    min?: number;
    max?: number;
    umin?: number;
    umax?: number;
    vmin?: number;
    vmax?: number;
    interval?: number;
    name: string;
    type: string;
    visualization?: string;
    structure?: ShapeDiverResponseParameterStructure;
    group?: ShapeDiverResponseParameterGroup;
    hint?: string;
    order?: number;
    tooltip?: string;
    displayname?: string;
    hidden: boolean;
}
export declare enum ShapeDiverResponseParameterStructure {
    ITEM = "item",
    LIST = "list",
    TREE = "tree"
}
export interface ShapeDiverResponseParameterGroup {
    id: string;
    name: string;
}
export interface ShapeDiverResponseUploadPart {
    id: string;
    href: string;
}
export declare type ShapeDiverResponseFileUpload = {
    [key: string]: ShapeDiverResponseUploadPart;
};
export declare type ShapeDiverResponseSdtfUpload = ShapeDiverResponseUploadPart[];
export interface ShapeDiverResponseGltfUpload {
    href: string;
}
//# sourceMappingURL=SdResponseDto.d.ts.map