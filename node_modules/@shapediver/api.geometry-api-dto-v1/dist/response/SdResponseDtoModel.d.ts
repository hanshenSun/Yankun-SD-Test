export interface ShapeDiverResponseCollection {
    error?: ShapeDiverResponseCollectionError;
    href?: string;
    items?: ShapeDiverResponseCollectionItem[];
    links?: any[];
    queries?: any[];
    template?: ShapeDiverResponseCollectionTemplate;
}
export interface ShapeDiverResponseCollectionError {
    message: string;
}
export interface ShapeDiverResponseCollectionItem {
    href: string;
    data: ShapeDiverResponseCollectionItemData[];
    links: ShapeDiverResponseCollectionItemLink[];
}
export interface ShapeDiverResponseCollectionTemplate {
    data: ShapeDiverResponseCollectionItemData[];
}
export declare enum ShapeDiverResponseCollectionItemDataName {
    ACCESSDOMAINS = "accessdomains",
    AUTH_GROUPS = "auth_groups",
    BACKENDACCESS = "backendaccess",
    BACKLINKURL = "backlinkurl",
    CHECKURL = "checkurl",
    COMP_TIME = "comptime",
    CREATEDATE = "createdate",
    DENY_SCRIPTS = "deny_scripts",
    DOWNLOADURL = "downloadurl",
    FILENAME = "filename",
    FTYPE = "ftype",
    ID = "id",
    ID2 = "id2",
    INITIAL_WARMUP = "initial_warmup",
    LAST_SESSION = "lastsession",
    LAST_VIEW = "lastview",
    MAX_COMP_TIME = "max_comp_time",
    MAX_EXPORT_SIZE = "max_export_size",
    MAX_IDLE_MINUTES = "max_idle_minutes",
    MAX_MODEL_SIZE = "max_model_size",
    MAX_OUTPUT_SIZE = "max_output_size",
    MAX_WAIT_TIME = "max_wait_time",
    MEM_USAGE = "memUsage",
    MSG = "msg",
    NAME = "name",
    NUM_COMP = "numcomp",
    NUM_LOADED_MAX = "num_loaded_max",
    NUM_LOADED_MIN = "num_loaded_min",
    NUM_PRELOADED_MIN = "num_preloaded_min",
    NUM_SESSIONS = "numsessions",
    PUB = "pub",
    REQUEST_TIME = "requesttime",
    REQUIRE_TOKEN = "require_token",
    S3URL = "s3url",
    SESSION_RATE_LIMIT = "session_rate_limit",
    SIZE = "size",
    STAT = "stat",
    TICKET = "ticket",
    TRUST = "trust",
    WEBHOOK_URL = "webhook_url",
    WEBHOOK_TOKEN = "webhook_token"
}
export interface ShapeDiverResponseCollectionItemData {
    name: ShapeDiverResponseCollectionItemDataName;
    value: string | string[] | boolean | number;
}
export declare enum ShapeDiverResponseCollectionItemLinkRel {
    TICKET = "ticket"
}
export interface ShapeDiverResponseCollectionItemLink {
    href: string;
    rel: ShapeDiverResponseCollectionItemLinkRel;
}
//# sourceMappingURL=SdResponseDtoModel.d.ts.map