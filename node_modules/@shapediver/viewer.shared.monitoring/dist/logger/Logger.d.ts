export declare enum LOGGINGLEVEL {
    NONE = "none",
    ERROR = "error",
    FATAL = "fatal",
    WARN = "warn",
    INFO = "info",
    DEBUG = "debug",
    DEBUG_HIGH = "debug.high",
    DEBUG_MEDIUM = "debug.medium",
    DEBUG_LOW = "debug.low"
}
export declare class Logger {
    private _loggingLevel;
    private _showMessages;
    private _updateCBs;
    constructor();
    get loggingLevel(): LOGGINGLEVEL;
    set loggingLevel(value: LOGGINGLEVEL);
    get showMessages(): boolean;
    set showMessages(value: boolean);
    private canLog;
    debug(msg: string): void;
    debugHigh(msg: string): void;
    debugLow(msg: string): void;
    debugMedium(msg: string): void;
    errorMessage(msg: string, throwError?: boolean): void;
    error(msg: string, error: Error, throwError?: boolean): void;
    httpError(msg: string, error: Error, httpError: number, throwError?: boolean): void;
    fatal(msg: string): void;
    info(msg: string): void;
    warn(msg: string): void;
    private httpErrorHelper;
    private messageConstruction;
    addUpdateCB(value: () => void): void;
}
//# sourceMappingURL=Logger.d.ts.map