/// <reference types="node" />
import * as THREE from 'three';
import { RenderingEngine } from '../RenderingEngine';
import { IManager } from '../interfaces/IManager.js';
export declare class BeautyRenderingManager implements IManager {
    private readonly _renderingEngine;
    private readonly _systemInfo;
    private _beautyRenderingActive;
    private _beautyRenderingDurationActive;
    private _beautyRenderingTimeout;
    private _effectComposer;
    private _lastTime;
    private _lightSizeUVEnd;
    private _lightSizeUVStart;
    private _renderPass;
    private _saoPass;
    private _ssaaPass;
    private _gammaCorrectionPass;
    constructor(_renderingEngine: RenderingEngine);
    get beautyRenderingActive(): boolean;
    set beautyRenderingActive(value: boolean);
    get beautyRenderingDurationActive(): number;
    set beautyRenderingDurationActive(value: number);
    get beautyRenderingTimeout(): NodeJS.Timeout | null;
    set beautyRenderingTimeout(value: NodeJS.Timeout | null);
    activateBeautyRenderShaders(): void;
    assignOutputEncoding(encoding: number): void;
    deactivateBeautyRenderShaders(): void;
    init(): void;
    render(time: number, camera: THREE.Camera, width: number, height: number): void;
    startBeautyRenderCountdown(): void;
    stopBeautyRenderCountdown(): void;
    private setShaderProperties;
}
//# sourceMappingURL=BeautyRenderingManager.d.ts.map