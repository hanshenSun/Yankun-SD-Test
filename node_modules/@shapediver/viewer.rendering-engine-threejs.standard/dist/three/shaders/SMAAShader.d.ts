export namespace SMAAEdgesShader {
    namespace defines {
        const SMAA_THRESHOLD: string;
    }
    namespace uniforms {
        namespace tDiffuse {
            const value: null;
        }
        namespace resolution {
            const value_1: Vector2;
            export { value_1 as value };
        }
    }
    const vertexShader: string;
    const fragmentShader: string;
}
export namespace SMAAWeightsShader {
    export namespace defines_1 {
        const SMAA_MAX_SEARCH_STEPS: string;
        const SMAA_AREATEX_MAX_DISTANCE: string;
        const SMAA_AREATEX_PIXEL_SIZE: string;
        const SMAA_AREATEX_SUBTEX_SIZE: string;
    }
    export { defines_1 as defines };
    export namespace uniforms_1 {
        export namespace tDiffuse_1 {
            const value_2: null;
            export { value_2 as value };
        }
        export { tDiffuse_1 as tDiffuse };
        export namespace tArea {
            const value_3: null;
            export { value_3 as value };
        }
        export namespace tSearch {
            const value_4: null;
            export { value_4 as value };
        }
        export namespace resolution_1 {
            const value_5: Vector2;
            export { value_5 as value };
        }
        export { resolution_1 as resolution };
    }
    export { uniforms_1 as uniforms };
    const vertexShader_1: string;
    export { vertexShader_1 as vertexShader };
    const fragmentShader_1: string;
    export { fragmentShader_1 as fragmentShader };
}
export namespace SMAABlendShader {
    export namespace uniforms_2 {
        export namespace tDiffuse_2 {
            const value_6: null;
            export { value_6 as value };
        }
        export { tDiffuse_2 as tDiffuse };
        export namespace tColor {
            const value_7: null;
            export { value_7 as value };
        }
        export namespace resolution_2 {
            const value_8: Vector2;
            export { value_8 as value };
        }
        export { resolution_2 as resolution };
    }
    export { uniforms_2 as uniforms };
    const vertexShader_2: string;
    export { vertexShader_2 as vertexShader };
    const fragmentShader_2: string;
    export { fragmentShader_2 as fragmentShader };
}
import { Vector2 } from "three/src/math/Vector2";
//# sourceMappingURL=SMAAShader.d.ts.map