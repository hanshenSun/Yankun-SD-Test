"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpotLight = void 0;
const gl_matrix_1 = require("gl-matrix");
const ILight_1 = require("../../interface/ILight");
const AbstractLight_1 = require("../AbstractLight");
class SpotLight extends AbstractLight_1.AbstractLight {
    constructor(properties) {
        super({
            color: properties.color || '#ffffff',
            intensity: properties.intensity !== undefined ? properties.intensity : 0.5,
            type: ILight_1.LIGHTTYPE.SPOT,
            name: properties.name,
            order: properties.order,
            id: properties.id
        });
        this._angle = Math.PI / 4.0;
        this._decay = 1;
        this._distance = 0;
        this._penumbra = 0.5;
        this._position = gl_matrix_1.vec3.fromValues(-1, 0, 1);
        this._target = gl_matrix_1.vec3.fromValues(0, 0, 0);
        if (properties.position)
            this._position = properties.position;
        if (properties.target)
            this._target = properties.target;
        if (properties.distance)
            this._distance = properties.distance;
        if (properties.decay)
            this._decay = properties.decay;
        if (properties.angle)
            this._angle = properties.angle;
        if (properties.penumbra)
            this._penumbra = properties.penumbra;
    }
    get angle() {
        return this._angle;
    }
    set angle(value) {
        this._angle = value;
        this.updateVersion();
    }
    get decay() {
        return this._decay;
    }
    set decay(value) {
        this._decay = value;
        this.updateVersion();
    }
    get distance() {
        return this._distance;
    }
    set distance(value) {
        this._distance = value;
        this.updateVersion();
    }
    get penumbra() {
        return this._penumbra;
    }
    set penumbra(value) {
        this._penumbra = value;
        this.updateVersion();
    }
    get position() {
        return this._position;
    }
    set position(value) {
        this._position = value;
        this.updateVersion();
    }
    get target() {
        return this._target;
    }
    set target(value) {
        this._target = value;
        this.updateVersion();
    }
    clone() {
        return new SpotLight({
            color: this.color,
            position: this.position,
            target: this.target,
            distance: this.distance,
            decay: this.decay,
            angle: this.angle,
            penumbra: this.penumbra,
            intensity: this.intensity,
            name: this.name,
            order: this.order
        });
    }
}
exports.SpotLight = SpotLight;
//# sourceMappingURL=SpotLight.js.map