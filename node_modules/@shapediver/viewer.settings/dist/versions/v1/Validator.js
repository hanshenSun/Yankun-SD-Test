"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validate = void 0;
const joi_1 = __importDefault(require("joi"));
const lightSchema = joi_1.default.object({
    id: joi_1.default.string(),
    name: joi_1.default.string().optional(),
    type: joi_1.default.string(),
    properties: {
        color: joi_1.default.alternatives([joi_1.default.number(), joi_1.default.string()]).optional(),
        direction: joi_1.default.object({ x: joi_1.default.number(), y: joi_1.default.number(), z: joi_1.default.number() }).optional(),
        position: joi_1.default.object({ x: joi_1.default.number(), y: joi_1.default.number(), z: joi_1.default.number() }).optional(),
        target: joi_1.default.object({ x: joi_1.default.number(), y: joi_1.default.number(), z: joi_1.default.number() }).optional(),
        castShadow: joi_1.default.boolean().optional(),
        skyColor: joi_1.default.alternatives([joi_1.default.number(), joi_1.default.string()]).optional(),
        groundColor: joi_1.default.alternatives([joi_1.default.number(), joi_1.default.string()]).optional(),
        intensity: joi_1.default.number().optional(),
        distance: joi_1.default.number().optional(),
        angle: joi_1.default.number().optional(),
        penumbra: joi_1.default.number().optional(),
        decay: joi_1.default.number().optional(),
        shadowMapResolution: joi_1.default.number().optional(),
        shadowMapBias: joi_1.default.number().optional()
    }
});
const lightScenesSchema = joi_1.default.object().pattern(/^/, [
    joi_1.default.object({
        id: joi_1.default.string(),
        name: joi_1.default.string().optional(),
        lights: joi_1.default.object().pattern(/^/, [lightSchema])
    })
]);
const schema = joi_1.default.object({
    build_date: joi_1.default.string().allow('').optional(),
    build_version: joi_1.default.string().allow('').optional(),
    settings_version: joi_1.default.string(),
    ambientOcclusion: joi_1.default.boolean(),
    autoRotateSpeed: joi_1.default.number().min(0),
    backgroundColor: joi_1.default.string().optional(),
    bumpAmplitude: joi_1.default.number().min(0),
    camera: { position: { x: joi_1.default.number(), y: joi_1.default.number(), z: joi_1.default.number() }, target: { x: joi_1.default.number(), y: joi_1.default.number(), z: joi_1.default.number() } },
    cameraAutoAdjust: joi_1.default.boolean(),
    cameraMovementDuration: joi_1.default.number().min(0),
    cameraOrtho: { position: { x: joi_1.default.number(), y: joi_1.default.number(), z: joi_1.default.number() }, target: { x: joi_1.default.number(), y: joi_1.default.number(), z: joi_1.default.number() } },
    cameraRevertAtMouseUp: joi_1.default.boolean(),
    clearAlpha: joi_1.default.number().min(0).max(1).optional(),
    clearColor: joi_1.default.string().optional(),
    commitParameters: joi_1.default.boolean(),
    controlDamping: joi_1.default.number().min(0),
    controlNames: joi_1.default.object().pattern(/.*/, [joi_1.default.string()]),
    controlOrder: joi_1.default.array().items(joi_1.default.string()),
    defaultMaterialColor: joi_1.default.string(),
    disablePan: joi_1.default.boolean(),
    disableZoom: joi_1.default.boolean(),
    enableAutoRotation: joi_1.default.boolean(),
    enableRotation: joi_1.default.boolean(),
    environmentMap: joi_1.default.alternatives([joi_1.default.string(), joi_1.default.array().items(joi_1.default.string())]),
    environmentMapResolution: joi_1.default.string(),
    fov: joi_1.default.number().positive().max(180),
    lightScene: joi_1.default.string(),
    lightScenes: lightScenesSchema.allow(null),
    panSpeed: joi_1.default.number().min(0),
    parametersHidden: joi_1.default.array().items(joi_1.default.string()),
    pointSize: joi_1.default.number().min(0),
    revertAtMouseUpDuration: joi_1.default.number().min(0),
    rotateSpeed: joi_1.default.number().min(0),
    showEnvironmentMap: joi_1.default.boolean(),
    showGrid: joi_1.default.boolean(),
    showGroundPlane: joi_1.default.boolean(),
    showShadows: joi_1.default.boolean(),
    topView: joi_1.default.boolean(),
    zoomExtentFactor: joi_1.default.number().min(0),
    zoomSpeed: joi_1.default.number().min(0),
}).options({ presence: 'required' });
const validate = (s) => {
    const result = joi_1.default.attempt(s, schema);
    s = result.value;
};
exports.validate = validate;
//# sourceMappingURL=Validator.js.map