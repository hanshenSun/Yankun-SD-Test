"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _MapData_center, _MapData_color, _MapData_flipY, _MapData_image, _MapData_magFilter, _MapData_minFilter, _MapData_offset, _MapData_repeat, _MapData_rotation, _MapData_wrapS, _MapData_wrapT, _MaterialData_KHR_materials_pbrSpecularGlossiness, _MaterialData_KHR_materials_unlit, _MaterialData_alphaCutoff, _MaterialData_alphaMap, _MaterialData_alphaMode, _MaterialData_aoMap, _MaterialData_aoMapIntensity, _MaterialData_bumpMap, _MaterialData_bumpScale, _MaterialData_color, _MaterialData_emissiveMap, _MaterialData_emissiveness, _MaterialData_glossiness, _MaterialData_glossinessMap, _MaterialData_map, _MaterialData_metalness, _MaterialData_metalnessMap, _MaterialData_metalnessRoughnessMap, _MaterialData_name, _MaterialData_normalMap, _MaterialData_normalScale, _MaterialData_opacity, _MaterialData_roughness, _MaterialData_roughnessMap, _MaterialData_shading, _MaterialData_side, _MaterialData_specular, _MaterialData_specularGlossinessMap, _MaterialData_specularMap;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaterialData = exports.MapData = exports.MATERIAL_SHADING = exports.MATERIAL_ALPHA = exports.TEXTURE_FILTERING = exports.TEXTURE_WRAPPING = exports.MATERIAL_SIDE = void 0;
const gl_matrix_1 = require("gl-matrix");
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
var MATERIAL_SIDE;
(function (MATERIAL_SIDE) {
    MATERIAL_SIDE["DOUBLE"] = "double";
    MATERIAL_SIDE["FRONT"] = "front";
    MATERIAL_SIDE["BACK"] = "back";
})(MATERIAL_SIDE = exports.MATERIAL_SIDE || (exports.MATERIAL_SIDE = {}));
var TEXTURE_WRAPPING;
(function (TEXTURE_WRAPPING) {
    TEXTURE_WRAPPING[TEXTURE_WRAPPING["REPEAT"] = 10497] = "REPEAT";
    TEXTURE_WRAPPING[TEXTURE_WRAPPING["CLAMP_TO_EDGE"] = 33071] = "CLAMP_TO_EDGE";
    TEXTURE_WRAPPING[TEXTURE_WRAPPING["MIRRORED_REPEAT"] = 33648] = "MIRRORED_REPEAT";
})(TEXTURE_WRAPPING = exports.TEXTURE_WRAPPING || (exports.TEXTURE_WRAPPING = {}));
var TEXTURE_FILTERING;
(function (TEXTURE_FILTERING) {
    TEXTURE_FILTERING[TEXTURE_FILTERING["NONE"] = 0] = "NONE";
    TEXTURE_FILTERING[TEXTURE_FILTERING["NEAREST"] = 9728] = "NEAREST";
    TEXTURE_FILTERING[TEXTURE_FILTERING["LINEAR"] = 9729] = "LINEAR";
    TEXTURE_FILTERING[TEXTURE_FILTERING["NEAREST_MIPMAP_NEAREST"] = 9984] = "NEAREST_MIPMAP_NEAREST";
    TEXTURE_FILTERING[TEXTURE_FILTERING["LINEAR_MIPMAP_NEAREST"] = 9985] = "LINEAR_MIPMAP_NEAREST";
    TEXTURE_FILTERING[TEXTURE_FILTERING["NEAREST_MIPMAP_LINEAR"] = 9986] = "NEAREST_MIPMAP_LINEAR";
    TEXTURE_FILTERING[TEXTURE_FILTERING["LINEAR_MIPMAP_LINEAR"] = 9987] = "LINEAR_MIPMAP_LINEAR";
})(TEXTURE_FILTERING = exports.TEXTURE_FILTERING || (exports.TEXTURE_FILTERING = {}));
var MATERIAL_ALPHA;
(function (MATERIAL_ALPHA) {
    MATERIAL_ALPHA["OPAQUE"] = "opaque";
    MATERIAL_ALPHA["MASK"] = "mask";
    MATERIAL_ALPHA["BLEND"] = "blend";
})(MATERIAL_ALPHA = exports.MATERIAL_ALPHA || (exports.MATERIAL_ALPHA = {}));
var MATERIAL_SHADING;
(function (MATERIAL_SHADING) {
    MATERIAL_SHADING["FLAT"] = "flat";
    MATERIAL_SHADING["SMOOTH"] = "smooth";
})(MATERIAL_SHADING = exports.MATERIAL_SHADING || (exports.MATERIAL_SHADING = {}));
class MapData {
    constructor(image, wrapS = TEXTURE_WRAPPING.REPEAT, wrapT = TEXTURE_WRAPPING.REPEAT, minFilter = TEXTURE_FILTERING.NONE, magFilter = TEXTURE_FILTERING.NONE, center = gl_matrix_1.vec2.fromValues(0, 0), color, offset = gl_matrix_1.vec2.fromValues(0, 0), repeat = gl_matrix_1.vec2.fromValues(1, 1), rotation = 0, flipY = true) {
        _MapData_center.set(this, gl_matrix_1.vec2.fromValues(0, 0));
        _MapData_color.set(this, void 0);
        _MapData_flipY.set(this, true);
        _MapData_image.set(this, void 0);
        _MapData_magFilter.set(this, TEXTURE_FILTERING.NONE);
        _MapData_minFilter.set(this, TEXTURE_FILTERING.NONE);
        _MapData_offset.set(this, gl_matrix_1.vec2.fromValues(0, 0));
        _MapData_repeat.set(this, gl_matrix_1.vec2.fromValues(1, 1));
        _MapData_rotation.set(this, 0);
        _MapData_wrapS.set(this, TEXTURE_WRAPPING.REPEAT);
        _MapData_wrapT.set(this, TEXTURE_WRAPPING.REPEAT);
        __classPrivateFieldSet(this, _MapData_image, image, "f");
        __classPrivateFieldSet(this, _MapData_wrapS, wrapS, "f");
        __classPrivateFieldSet(this, _MapData_wrapT, wrapT, "f");
        __classPrivateFieldSet(this, _MapData_minFilter, minFilter, "f");
        __classPrivateFieldSet(this, _MapData_magFilter, magFilter, "f");
        __classPrivateFieldSet(this, _MapData_center, center, "f");
        __classPrivateFieldSet(this, _MapData_color, color, "f");
        __classPrivateFieldSet(this, _MapData_offset, offset, "f");
        __classPrivateFieldSet(this, _MapData_repeat, repeat, "f");
        __classPrivateFieldSet(this, _MapData_rotation, rotation, "f");
        __classPrivateFieldSet(this, _MapData_flipY, flipY, "f");
    }
    get center() {
        return __classPrivateFieldGet(this, _MapData_center, "f");
    }
    get color() {
        return __classPrivateFieldGet(this, _MapData_color, "f");
    }
    get flipY() {
        return __classPrivateFieldGet(this, _MapData_flipY, "f");
    }
    get image() {
        return __classPrivateFieldGet(this, _MapData_image, "f");
    }
    get magFilter() {
        return __classPrivateFieldGet(this, _MapData_magFilter, "f");
    }
    get minFilter() {
        return __classPrivateFieldGet(this, _MapData_minFilter, "f");
    }
    get offset() {
        return __classPrivateFieldGet(this, _MapData_offset, "f");
    }
    get repeat() {
        return __classPrivateFieldGet(this, _MapData_repeat, "f");
    }
    get rotation() {
        return __classPrivateFieldGet(this, _MapData_rotation, "f");
    }
    get wrapS() {
        return __classPrivateFieldGet(this, _MapData_wrapS, "f");
    }
    get wrapT() {
        return __classPrivateFieldGet(this, _MapData_wrapT, "f");
    }
    clone() {
        return new MapData(this.image.cloneNode(), this.wrapS, this.wrapT, this.minFilter, this.magFilter, this.center, this.color, this.offset, this.repeat, this.rotation, this.flipY);
    }
}
exports.MapData = MapData;
_MapData_center = new WeakMap(), _MapData_color = new WeakMap(), _MapData_flipY = new WeakMap(), _MapData_image = new WeakMap(), _MapData_magFilter = new WeakMap(), _MapData_minFilter = new WeakMap(), _MapData_offset = new WeakMap(), _MapData_repeat = new WeakMap(), _MapData_rotation = new WeakMap(), _MapData_wrapS = new WeakMap(), _MapData_wrapT = new WeakMap();
class MaterialData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    constructor(properties, id) {
        super(id);
        _MaterialData_KHR_materials_pbrSpecularGlossiness.set(this, false);
        _MaterialData_KHR_materials_unlit.set(this, false);
        _MaterialData_alphaCutoff.set(this, 0);
        _MaterialData_alphaMap.set(this, void 0);
        _MaterialData_alphaMode.set(this, MATERIAL_ALPHA.OPAQUE);
        _MaterialData_aoMap.set(this, void 0);
        _MaterialData_aoMapIntensity.set(this, 1.0);
        _MaterialData_bumpMap.set(this, void 0);
        _MaterialData_bumpScale.set(this, 1.0);
        _MaterialData_color.set(this, '#00fff7');
        _MaterialData_emissiveMap.set(this, void 0);
        _MaterialData_emissiveness.set(this, void 0);
        _MaterialData_glossiness.set(this, 1);
        _MaterialData_glossinessMap.set(this, void 0);
        _MaterialData_map.set(this, void 0);
        _MaterialData_metalness.set(this, 1.0);
        _MaterialData_metalnessMap.set(this, void 0);
        _MaterialData_metalnessRoughnessMap.set(this, void 0);
        _MaterialData_name.set(this, void 0);
        _MaterialData_normalMap.set(this, void 0);
        _MaterialData_normalScale.set(this, 1.0);
        _MaterialData_opacity.set(this, 1.0);
        _MaterialData_roughness.set(this, 1.0);
        _MaterialData_roughnessMap.set(this, void 0);
        _MaterialData_shading.set(this, MATERIAL_SHADING.SMOOTH);
        _MaterialData_side.set(this, MATERIAL_SIDE.DOUBLE);
        _MaterialData_specular.set(this, '#ffffff');
        _MaterialData_specularGlossinessMap.set(this, void 0);
        _MaterialData_specularMap.set(this, void 0);
        if (!properties)
            return;
        if (properties.alphaMap !== undefined)
            this.alphaMap = properties.alphaMap;
        if (properties.alphaCutoff !== undefined)
            this.alphaCutoff = properties.alphaCutoff;
        if (properties.alphaMode !== undefined)
            this.alphaMode = properties.alphaMode;
        if (properties.aoMap !== undefined)
            this.aoMap = properties.aoMap;
        if (properties.aoMapIntensity !== undefined)
            this.aoMapIntensity = properties.aoMapIntensity;
        if (properties.bumpMap !== undefined)
            this.bumpMap = properties.bumpMap;
        if (properties.bumpScale !== undefined)
            this.bumpScale = properties.bumpScale;
        if (properties.color !== undefined)
            this.color = properties.color;
        if (properties.emissiveMap !== undefined)
            this.emissiveMap = properties.emissiveMap;
        if (properties.emissiveness !== undefined)
            this.emissiveness = properties.emissiveness;
        if (properties.shading !== undefined)
            this.shading = properties.shading;
        if (properties.map !== undefined)
            this.map = properties.map;
        if (properties.metalness !== undefined)
            this.metalness = properties.metalness;
        if (properties.metalnessMap !== undefined)
            this.metalnessMap = properties.metalnessMap;
        if (properties.metalnessRoughnessMap !== undefined)
            this.metalnessRoughnessMap = properties.metalnessRoughnessMap;
        if (properties.name !== undefined)
            this.name = properties.name;
        if (properties.normalMap !== undefined)
            this.normalMap = properties.normalMap;
        if (properties.normalScale !== undefined)
            this.normalScale = properties.normalScale;
        if (properties.opacity !== undefined)
            this.opacity = properties.opacity;
        if (properties.roughness !== undefined)
            this.roughness = properties.roughness;
        if (properties.roughnessMap !== undefined)
            this.roughnessMap = properties.roughnessMap;
        if (properties.side !== undefined)
            this.side = properties.side;
        if (properties.KHR_materials_pbrSpecularGlossiness !== undefined)
            this.KHR_materials_pbrSpecularGlossiness = properties.KHR_materials_pbrSpecularGlossiness;
        if (properties.KHR_materials_unlit !== undefined)
            this.KHR_materials_unlit = properties.KHR_materials_unlit;
        if (properties.glossiness !== undefined)
            this.glossiness = properties.glossiness;
        if (properties.specular !== undefined)
            this.specular = properties.specular;
        if (properties.specularGlossinessMap !== undefined)
            this.specularGlossinessMap = properties.specularGlossinessMap;
        if (properties.specularMap !== undefined)
            this.specularMap = properties.specularMap;
        if (properties.glossinessMap !== undefined)
            this.glossinessMap = properties.glossinessMap;
    }
    get KHR_materials_pbrSpecularGlossiness() {
        return __classPrivateFieldGet(this, _MaterialData_KHR_materials_pbrSpecularGlossiness, "f");
    }
    set KHR_materials_pbrSpecularGlossiness(value) {
        __classPrivateFieldSet(this, _MaterialData_KHR_materials_pbrSpecularGlossiness, value, "f");
    }
    get KHR_materials_unlit() {
        return __classPrivateFieldGet(this, _MaterialData_KHR_materials_unlit, "f");
    }
    set KHR_materials_unlit(value) {
        __classPrivateFieldSet(this, _MaterialData_KHR_materials_unlit, value, "f");
    }
    get alphaCutoff() {
        return __classPrivateFieldGet(this, _MaterialData_alphaCutoff, "f");
    }
    set alphaCutoff(value) {
        __classPrivateFieldSet(this, _MaterialData_alphaCutoff, value, "f");
    }
    get alphaMap() {
        return __classPrivateFieldGet(this, _MaterialData_alphaMap, "f");
    }
    set alphaMap(value) {
        __classPrivateFieldSet(this, _MaterialData_alphaMap, value, "f");
    }
    get alphaMode() {
        return __classPrivateFieldGet(this, _MaterialData_alphaMode, "f");
    }
    set alphaMode(value) {
        __classPrivateFieldSet(this, _MaterialData_alphaMode, value, "f");
    }
    get aoMap() {
        return __classPrivateFieldGet(this, _MaterialData_aoMap, "f");
    }
    set aoMap(value) {
        __classPrivateFieldSet(this, _MaterialData_aoMap, value, "f");
    }
    get aoMapIntensity() {
        return __classPrivateFieldGet(this, _MaterialData_aoMapIntensity, "f");
    }
    set aoMapIntensity(value) {
        __classPrivateFieldSet(this, _MaterialData_aoMapIntensity, value, "f");
    }
    get bumpMap() {
        return __classPrivateFieldGet(this, _MaterialData_bumpMap, "f");
    }
    set bumpMap(value) {
        __classPrivateFieldSet(this, _MaterialData_bumpMap, value, "f");
    }
    get bumpScale() {
        return __classPrivateFieldGet(this, _MaterialData_bumpScale, "f");
    }
    set bumpScale(value) {
        __classPrivateFieldSet(this, _MaterialData_bumpScale, value, "f");
    }
    get color() {
        return __classPrivateFieldGet(this, _MaterialData_color, "f");
    }
    set color(value) {
        __classPrivateFieldSet(this, _MaterialData_color, value, "f");
    }
    get emissiveMap() {
        return __classPrivateFieldGet(this, _MaterialData_emissiveMap, "f");
    }
    set emissiveMap(value) {
        __classPrivateFieldSet(this, _MaterialData_emissiveMap, value, "f");
    }
    get emissiveness() {
        return __classPrivateFieldGet(this, _MaterialData_emissiveness, "f");
    }
    set emissiveness(value) {
        __classPrivateFieldSet(this, _MaterialData_emissiveness, value, "f");
    }
    get glossiness() {
        return __classPrivateFieldGet(this, _MaterialData_glossiness, "f");
    }
    set glossiness(value) {
        __classPrivateFieldSet(this, _MaterialData_glossiness, value, "f");
    }
    get glossinessMap() {
        return __classPrivateFieldGet(this, _MaterialData_glossinessMap, "f");
    }
    set glossinessMap(value) {
        __classPrivateFieldSet(this, _MaterialData_glossinessMap, value, "f");
    }
    get map() {
        return __classPrivateFieldGet(this, _MaterialData_map, "f");
    }
    set map(value) {
        __classPrivateFieldSet(this, _MaterialData_map, value, "f");
    }
    get metalness() {
        return __classPrivateFieldGet(this, _MaterialData_metalness, "f");
    }
    set metalness(value) {
        __classPrivateFieldSet(this, _MaterialData_metalness, value, "f");
    }
    get metalnessMap() {
        return __classPrivateFieldGet(this, _MaterialData_metalnessMap, "f");
    }
    set metalnessMap(value) {
        __classPrivateFieldSet(this, _MaterialData_metalnessMap, value, "f");
    }
    get metalnessRoughnessMap() {
        return __classPrivateFieldGet(this, _MaterialData_metalnessRoughnessMap, "f");
    }
    set metalnessRoughnessMap(value) {
        __classPrivateFieldSet(this, _MaterialData_metalnessRoughnessMap, value, "f");
    }
    get name() {
        return __classPrivateFieldGet(this, _MaterialData_name, "f");
    }
    set name(value) {
        __classPrivateFieldSet(this, _MaterialData_name, value, "f");
    }
    get normalMap() {
        return __classPrivateFieldGet(this, _MaterialData_normalMap, "f");
    }
    set normalMap(value) {
        __classPrivateFieldSet(this, _MaterialData_normalMap, value, "f");
    }
    get normalScale() {
        return __classPrivateFieldGet(this, _MaterialData_normalScale, "f");
    }
    set normalScale(value) {
        __classPrivateFieldSet(this, _MaterialData_normalScale, value, "f");
    }
    get opacity() {
        return __classPrivateFieldGet(this, _MaterialData_opacity, "f");
    }
    set opacity(value) {
        __classPrivateFieldSet(this, _MaterialData_opacity, value, "f");
    }
    get roughness() {
        return __classPrivateFieldGet(this, _MaterialData_roughness, "f");
    }
    set roughness(value) {
        __classPrivateFieldSet(this, _MaterialData_roughness, value, "f");
    }
    get roughnessMap() {
        return __classPrivateFieldGet(this, _MaterialData_roughnessMap, "f");
    }
    set roughnessMap(value) {
        __classPrivateFieldSet(this, _MaterialData_roughnessMap, value, "f");
    }
    get shading() {
        return __classPrivateFieldGet(this, _MaterialData_shading, "f");
    }
    set shading(value) {
        __classPrivateFieldSet(this, _MaterialData_shading, value, "f");
    }
    get side() {
        return __classPrivateFieldGet(this, _MaterialData_side, "f");
    }
    set side(value) {
        __classPrivateFieldSet(this, _MaterialData_side, value, "f");
    }
    get specular() {
        return __classPrivateFieldGet(this, _MaterialData_specular, "f");
    }
    set specular(value) {
        __classPrivateFieldSet(this, _MaterialData_specular, value, "f");
    }
    get specularGlossinessMap() {
        return __classPrivateFieldGet(this, _MaterialData_specularGlossinessMap, "f");
    }
    set specularGlossinessMap(value) {
        __classPrivateFieldSet(this, _MaterialData_specularGlossinessMap, value, "f");
    }
    get specularMap() {
        return __classPrivateFieldGet(this, _MaterialData_specularMap, "f");
    }
    set specularMap(value) {
        __classPrivateFieldSet(this, _MaterialData_specularMap, value, "f");
    }
    clone() {
        return new MaterialData({
            alphaMap: this.alphaMap,
            alphaCutoff: this.alphaCutoff,
            alphaMode: this.alphaMode,
            aoMap: this.aoMap,
            aoMapIntensity: this.aoMapIntensity,
            bumpMap: this.bumpMap,
            bumpScale: this.bumpScale,
            color: this.color,
            emissiveMap: this.emissiveMap,
            emissiveness: this.emissiveness,
            shading: this.shading,
            map: this.map,
            metalness: this.metalness,
            metalnessMap: this.metalnessMap,
            metalnessRoughnessMap: this.metalnessRoughnessMap,
            name: this.name,
            normalMap: this.normalMap,
            normalScale: this.normalScale,
            opacity: this.opacity,
            roughness: this.roughness,
            roughnessMap: this.roughnessMap,
            side: this.side,
            KHR_materials_pbrSpecularGlossiness: this.KHR_materials_pbrSpecularGlossiness,
            KHR_materials_unlit: this.KHR_materials_unlit,
            specular: this.specular,
            specularMap: this.specularMap,
            specularGlossinessMap: this.specularGlossinessMap,
            glossiness: this.glossiness,
            glossinessMap: this.glossinessMap,
        }, this.id);
    }
}
exports.MaterialData = MaterialData;
_MaterialData_KHR_materials_pbrSpecularGlossiness = new WeakMap(), _MaterialData_KHR_materials_unlit = new WeakMap(), _MaterialData_alphaCutoff = new WeakMap(), _MaterialData_alphaMap = new WeakMap(), _MaterialData_alphaMode = new WeakMap(), _MaterialData_aoMap = new WeakMap(), _MaterialData_aoMapIntensity = new WeakMap(), _MaterialData_bumpMap = new WeakMap(), _MaterialData_bumpScale = new WeakMap(), _MaterialData_color = new WeakMap(), _MaterialData_emissiveMap = new WeakMap(), _MaterialData_emissiveness = new WeakMap(), _MaterialData_glossiness = new WeakMap(), _MaterialData_glossinessMap = new WeakMap(), _MaterialData_map = new WeakMap(), _MaterialData_metalness = new WeakMap(), _MaterialData_metalnessMap = new WeakMap(), _MaterialData_metalnessRoughnessMap = new WeakMap(), _MaterialData_name = new WeakMap(), _MaterialData_normalMap = new WeakMap(), _MaterialData_normalScale = new WeakMap(), _MaterialData_opacity = new WeakMap(), _MaterialData_roughness = new WeakMap(), _MaterialData_roughnessMap = new WeakMap(), _MaterialData_shading = new WeakMap(), _MaterialData_side = new WeakMap(), _MaterialData_specular = new WeakMap(), _MaterialData_specularGlossinessMap = new WeakMap(), _MaterialData_specularMap = new WeakMap();
//# sourceMappingURL=MaterialData.js.map