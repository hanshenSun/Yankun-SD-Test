"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _CustomData_data;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomData = void 0;
const viewer_shared_node_tree_1 = require("@shapediver/viewer.shared.node-tree");
class CustomData extends viewer_shared_node_tree_1.AbstractTreeNodeData {
    constructor(data, id) {
        super(id);
        _CustomData_data.set(this, void 0);
        __classPrivateFieldSet(this, _CustomData_data, data, "f");
    }
    get data() {
        return __classPrivateFieldGet(this, _CustomData_data, "f");
    }
    set data(value) {
        __classPrivateFieldSet(this, _CustomData_data, value, "f");
    }
    clone() {
        return new CustomData(Object.assign({}, this.data), this.id);
    }
}
exports.CustomData = CustomData;
_CustomData_data = new WeakMap();
//# sourceMappingURL=CustomData.js.map