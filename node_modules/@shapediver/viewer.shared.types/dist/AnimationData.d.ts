import { AbstractTreeNodeData, ITransformation, ITreeNodeData, TreeNode } from '@shapediver/viewer.shared.node-tree';
export declare type AnimationTrack = {
    node: TreeNode;
    times: Float32Array | Uint8Array | Uint16Array | Int8Array | Int16Array | Uint32Array | number[];
    values: Float32Array | Uint8Array | Uint16Array | Int8Array | Int16Array | Uint32Array | number[];
    path: 'scale' | 'translation' | 'rotation';
    interpolation: 'linear' | 'step';
    previousMatrix?: ITransformation;
};
export declare class AnimationData extends AbstractTreeNodeData {
    #private;
    constructor(name: string, tracks: AnimationTrack[], start: number, duration: number, id?: string);
    get animate(): boolean;
    get animationTime(): number;
    set animationTime(value: number);
    get duration(): number;
    get name(): string;
    get repeat(): boolean;
    set repeat(value: boolean);
    get start(): number;
    get tracks(): AnimationTrack[];
    clone(): ITreeNodeData;
    continueAnimation(): void;
    pauseAnimation(): void;
    startAnimation(): void;
    stopAnimation(): void;
}
//# sourceMappingURL=AnimationData.d.ts.map