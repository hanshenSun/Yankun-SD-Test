import { Box } from '@shapediver/viewer.shared.math';
import { vec3 } from 'gl-matrix';
import { CAMERATYPE } from '../ICameraEngine';
export interface ICamera {
    readonly id: string;
    readonly type: CAMERATYPE;
    autoAdjust: boolean;
    cameraMovementDuration: number;
    defaultPosition: vec3;
    defaultTarget: vec3;
    enableCameraControls: boolean;
    position: vec3;
    order?: number;
    revertAtMouseUp: boolean;
    revertAtMouseUpDuration: number;
    target: vec3;
    zoomExtentsFactor: number;
    animate(path: {
        position: vec3;
        target: vec3;
    }[], options?: {
        easing?: string | Function;
        duration?: number;
        default?: boolean;
        coordinates?: string;
        interpolation?: string | Function;
    }): Promise<boolean>;
    reset(options?: {
        easing?: string | Function;
        duration?: number;
        default?: boolean;
        coordinates?: string;
        interpolation?: string | Function;
    }): Promise<boolean>;
    set(position: vec3, target: vec3, options?: {
        easing?: string | Function;
        duration?: number;
        default?: boolean;
        coordinates?: string;
        interpolation?: string | Function;
    }): Promise<boolean>;
    zoomTo(zoomTarget?: Box, options?: {
        easing?: string | Function;
        duration?: number;
        default?: boolean;
        coordinates?: string;
        interpolation?: string | Function;
    }): Promise<boolean>;
}
//# sourceMappingURL=ICamera.d.ts.map