import { vec3 } from 'gl-matrix';
import { ICamera } from '../../../interfaces/camera/ICamera';
import { ICameraControlsUsage } from '../../../interfaces/controls/ICameraControlsUsage';
import { ICameraInterpolation } from '../../../interfaces/interpolation/ICameraInterpolation';
export declare class CameraCylindricalInterpolation implements ICameraInterpolation {
    private readonly _camera;
    private readonly _cameraControls;
    private readonly _from;
    private readonly _to;
    private _dir_from;
    private _dir_to;
    private _from_position_heightAdjusted;
    private _h_from;
    private _h_to;
    private _lorr;
    private _r_from;
    private _r_to;
    private _shortest_angle;
    private _to_position_heightAdjusted;
    constructor(_camera: ICamera, _cameraControls: ICameraControlsUsage, _from: {
        position: vec3;
        target: vec3;
    }, _to: {
        position: vec3;
        target: vec3;
    });
    onComplete(value: {
        delta: number;
    }): void;
    onStop(value: {
        delta: number;
    }): void;
    onUpdate(value: {
        delta: number;
    }): void;
}
//# sourceMappingURL=CameraCylindricalInterpolation.d.ts.map