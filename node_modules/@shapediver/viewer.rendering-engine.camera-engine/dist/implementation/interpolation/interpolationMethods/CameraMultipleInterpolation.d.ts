import { vec3 } from 'gl-matrix';
import { ICamera } from '../../../interfaces/camera/ICamera';
import { ICameraControlsUsage } from '../../../interfaces/controls/ICameraControlsUsage';
import { ICameraInterpolation } from '../../../interfaces/interpolation/ICameraInterpolation';
export declare class CameraMultipleInterpolation implements ICameraInterpolation {
    private readonly _camera;
    private readonly _cameraControls;
    private readonly _path;
    private readonly _interpolationFunction;
    end: {
        position: {
            x: number[];
            y: number[];
            z: number[];
        };
        target: {
            x: number[];
            y: number[];
            z: number[];
        };
    };
    constructor(_camera: ICamera, _cameraControls: ICameraControlsUsage, _path: {
        position: vec3;
        target: vec3;
    }[], _interpolationFunction: Function);
    onComplete(value: {
        delta: number;
    }): void;
    onStop(value: {
        delta: number;
    }): void;
    onUpdate(value: {
        delta: number;
    }): void;
}
//# sourceMappingURL=CameraMultipleInterpolation.d.ts.map