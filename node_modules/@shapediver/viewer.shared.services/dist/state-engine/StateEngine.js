"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StateEngine = void 0;
const tsyringe_1 = require("tsyringe");
const index_1 = require("../index");
const StatePromise_1 = require("./StatePromise");
let StateEngine = class StateEngine {
    constructor() {
        this._eventEngine = tsyringe_1.container.resolve(index_1.EventEngine);
        this._customStates = {};
        this._primarySettingsRegistered = new StatePromise_1.StatePromise();
        this._boundingBoxCreated = new StatePromise_1.StatePromise();
        this._primarySessionLoaded = new StatePromise_1.StatePromise();
        this._firstViewerShown = new StatePromise_1.StatePromise();
        this._fontLoaded = new StatePromise_1.StatePromise();
        this._eventEngine.addListener(index_1.EVENTTYPE.SETTINGS.SETTINGS_REGISTERED, (e) => {
            const sessionEvent = e;
            if (sessionEvent.sessionId)
                this.getCustomState(sessionEvent.sessionId + '_settings_registered').resolve(true);
        });
    }
    get primarySettingsRegistered() {
        return this._primarySettingsRegistered;
    }
    get boundingBoxCreated() {
        return this._boundingBoxCreated;
    }
    get primarySessionLoaded() {
        return this._primarySessionLoaded;
    }
    get firstViewerShown() {
        return this._firstViewerShown;
    }
    get fontLoaded() {
        return this._fontLoaded;
    }
    getCustomState(id) {
        return this._customStates[id];
    }
    createCustomState(id) {
        this._customStates[id] = new StatePromise_1.StatePromise();
        return this._customStates[id];
    }
};
StateEngine = __decorate([
    tsyringe_1.singleton(),
    __metadata("design:paramtypes", [])
], StateEngine);
exports.StateEngine = StateEngine;
//# sourceMappingURL=StateEngine.js.map