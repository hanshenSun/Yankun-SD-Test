import { mat4, vec3 } from 'gl-matrix';
import { IGeometry } from './IGeometry';
export declare class Plane implements IGeometry {
    private _normal;
    private _constant;
    constructor(_normal?: vec3, _constant?: number);
    get constant(): number;
    set constant(value: number);
    get normal(): vec3;
    set normal(value: vec3);
    applyMatrix(matrix: mat4): IGeometry;
    clampPoint(point: vec3): vec3;
    clone(): IGeometry;
    containsPoint(point: vec3): boolean;
    distanceToPoint(point: vec3): number;
    intersect(origin: vec3, direction: vec3): number | null;
    setFromNormalAndCoplanarPoint(normal: vec3, point: vec3): Plane;
}
//# sourceMappingURL=Plane.d.ts.map